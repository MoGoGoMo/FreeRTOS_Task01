ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USART_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	USART_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	USART_DeInit:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c"
   1:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
   2:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
   3:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @file    stm32f4xx_usart.c
   4:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @author  MCD Application Team
   5:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @version V1.8.0
   6:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @date    04-November-2016
   7:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          functionalities of the Universal synchronous asynchronous receiver
   9:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          transmitter (USART):           
  10:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + Initialization and Configuration
  11:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + Data transfers
  12:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + Multi-Processor Communication
  13:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + LIN mode
  14:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + Half-duplex mode
  15:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + Smartcard mode
  16:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + IrDA mode
  17:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + DMA transfers management
  18:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           + Interrupts and flags management 
  19:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           
  20:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   @verbatim       
  21:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
  22:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                         ##### How to use this driver #####
  23:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
  24:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
  25:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable peripheral clock using the following functions
  26:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           RCC_APB2PeriphClockCmd(RCC_APB2Periph_USARTx, ENABLE) for USART1 and USART6 
  27:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           RCC_APB1PeriphClockCmd(RCC_APB1Periph_USARTx, ENABLE) for USART2, USART3, 
  28:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           UART4 or UART5.
  29:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 2


  30:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) According to the USART mode, enable the GPIO clocks using 
  31:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           RCC_AHB1PeriphClockCmd() function. (The I/O can be TX, RX, CTS, 
  32:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           or/and SCLK). 
  33:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
  34:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Peripheral's alternate function: 
  35:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Connect the pin to the desired peripherals' Alternate 
  36:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             Function (AF) using GPIO_PinAFConfig() function
  37:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Configure the desired pin in alternate function by:
  38:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  39:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Select the type, pull-up/pull-down and output speed via 
  40:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             GPIO_PuPd, GPIO_OType and GPIO_Speed members
  41:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Call GPIO_Init() function
  42:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           
  43:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the Baud Rate, Word Length , Stop Bit, Parity, Hardware 
  44:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           flow control and Mode(Receiver/Transmitter) using the USART_Init()
  45:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           function.
  46:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
  47:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) For synchronous mode, enable the clock and program the polarity,
  48:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           phase and last bit using the USART_ClockInit() function.
  49:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
  50:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the NVIC and the corresponding interrupt using the function 
  51:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****          USART_ITConfig() if you need to use interrupt mode. 
  52:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
  53:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) When using the DMA mode 
  54:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Configure the DMA using DMA_Init() function
  55:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Active the needed channel Request using USART_DMACmd() function
  56:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    
  57:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the USART using the USART_Cmd() function.
  58:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    
  59:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  60:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
  61:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- Refer to Multi-Processor, LIN, half-duplex, Smartcard, IrDA sub-sections
  62:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           for more details
  63:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
  64:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]        
  65:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In order to reach higher communication baudrates, it is possible to
  66:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     enable the oversampling by 8 mode using the function USART_OverSampling8Cmd().
  67:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This function should be called after enabling the USART clock (RCC_APBxPeriphClockCmd())
  68:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     and before calling the function USART_Init().
  69:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             
  70:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     @endverbatim        
  71:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
  72:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @attention
  73:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  74:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  75:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  76:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  77:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * You may not use this file except in compliance with the License.
  78:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * You may obtain a copy of the License at:
  79:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  80:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  81:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  82:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * Unless required by applicable law or agreed to in writing, software 
  83:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  84:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  85:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * See the License for the specific language governing permissions and
  86:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * limitations under the License.
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 3


  87:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  88:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************  
  89:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */ 
  90:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  91:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Includes ------------------------------------------------------------------*/
  92:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #include "stm32f4xx_usart.h"
  93:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #include "stm32f4xx_rcc.h"
  94:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  95:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  96:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
  97:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
  98:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  99:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART 
 100:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief USART driver modules
 101:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 102:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 103:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 104:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private typedef -----------------------------------------------------------*/
 105:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private define ------------------------------------------------------------*/
 106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 107:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR1 register clear Mask ((~(uint16_t)0xE9F3)) */
 108:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR1_CLEAR_MASK            ((uint16_t)(USART_CR1_M | USART_CR1_PCE | \
 109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR1_PS | USART_CR1_TE | \
 110:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR1_RE))
 111:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 112:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR2 register clock bits clear Mask ((~(uint16_t)0xF0FF)) */
 113:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR2_CLOCK_CLEAR_MASK      ((uint16_t)(USART_CR2_CLKEN | USART_CR2_CPOL | \
 114:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR2_CPHA | USART_CR2_LBCL))
 115:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 116:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR3 register clear Mask ((~(uint16_t)0xFCFF)) */
 117:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR3_CLEAR_MASK            ((uint16_t)(USART_CR3_RTSE | USART_CR3_CTSE))
 118:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 119:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART Interrupts mask */
 120:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define IT_MASK                   ((uint16_t)0x001F)
 121:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 122:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private macro -------------------------------------------------------------*/
 123:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private variables ---------------------------------------------------------*/
 124:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private function prototypes -----------------------------------------------*/
 125:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private functions ---------------------------------------------------------*/
 126:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 127:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Private_Functions
 128:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 129:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 130:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 131:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group1 Initialization and Configuration functions
 132:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Initialization and Configuration functions 
 133:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 134:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 135:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 136:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             ##### Initialization and Configuration functions #####
 137:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 138:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 139:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to initialize the USART 
 140:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     in asynchronous and in synchronous modes.
 141:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Baud Rate
 143:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Word Length 
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 4


 144:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Stop Bit
 145:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 146:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****              in the data register is transmitted but is changed by the parity bit.
 147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 148:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****              the possible USART frame formats are as listed in the following table:
 149:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+     
 150:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |   M bit |  PCE bit  |            USART frame                |
 151:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------------------|---------------------------------------|             
 152:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    0    |    0      |    | SB | 8 bit data | STB |          |
 153:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 155:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 156:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    1    |    0      |    | SB | 9 bit data | STB |          |
 157:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 158:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 159:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+            
 160:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Hardware flow control
 161:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Receiver/transmitter modes
 162:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 164:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     The USART_Init() function follows the USART  asynchronous configuration 
 165:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     procedure (details for the procedure are available in reference manual (RM0090)).
 166:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 167:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      (+) For the synchronous mode in addition to the asynchronous mode parameters these 
 168:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****          parameters should be also configured:
 169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART Clock Enabled
 170:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART polarity
 171:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART phase
 172:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART LastBit
 173:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 174:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 175:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     These parameters can be configured using the USART_ClockInit() function.
 176:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 177:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 178:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 179:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 180:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 182:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Deinitializes the USARTx peripheral registers to their default reset values.
 183:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 184:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 185:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 186:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 187:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_DeInit(USART_TypeDef* USARTx)
 188:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
  30              		.loc 1 188 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 188 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 189:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 190:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 5


  40              		.loc 1 190 3 is_stmt 1 view .LVU2
 191:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 192:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USARTx == USART1)
  41              		.loc 1 192 3 view .LVU3
  42              		.loc 1 192 6 is_stmt 0 view .LVU4
  43 0002 364B     		ldr	r3, .L19
  44 0004 9842     		cmp	r0, r3
  45 0006 15D0     		beq	.L11
 193:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
 195:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
 196:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 197:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == USART2)
  46              		.loc 1 197 8 is_stmt 1 view .LVU5
  47              		.loc 1 197 11 is_stmt 0 view .LVU6
  48 0008 354B     		ldr	r3, .L19+4
  49 000a 9842     		cmp	r0, r3
  50 000c 1BD0     		beq	.L12
 198:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
 200:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 201:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 202:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == USART3)
  51              		.loc 1 202 8 is_stmt 1 view .LVU7
  52              		.loc 1 202 11 is_stmt 0 view .LVU8
  53 000e 354B     		ldr	r3, .L19+8
  54 0010 9842     		cmp	r0, r3
  55 0012 23D0     		beq	.L13
 203:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
 205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 206:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }    
 207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == UART4)
  56              		.loc 1 207 8 is_stmt 1 view .LVU9
  57              		.loc 1 207 11 is_stmt 0 view .LVU10
  58 0014 344B     		ldr	r3, .L19+12
  59 0016 9842     		cmp	r0, r3
  60 0018 2BD0     		beq	.L14
 208:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
 210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 212:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == UART5)
  61              		.loc 1 212 8 is_stmt 1 view .LVU11
  62              		.loc 1 212 11 is_stmt 0 view .LVU12
  63 001a 344B     		ldr	r3, .L19+16
  64 001c 9842     		cmp	r0, r3
  65 001e 33D0     		beq	.L15
 213:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 216:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }  
 217:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == USART6)
  66              		.loc 1 217 8 is_stmt 1 view .LVU13
  67              		.loc 1 217 11 is_stmt 0 view .LVU14
  68 0020 334B     		ldr	r3, .L19+20
  69 0022 9842     		cmp	r0, r3
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 6


  70 0024 3BD0     		beq	.L16
 218:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, ENABLE);
 220:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 221:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 222:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == UART7)
  71              		.loc 1 222 8 is_stmt 1 view .LVU15
  72              		.loc 1 222 11 is_stmt 0 view .LVU16
  73 0026 334B     		ldr	r3, .L19+24
  74 0028 9842     		cmp	r0, r3
  75 002a 41D0     		beq	.L17
 223:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART7, ENABLE);
 225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART7, DISABLE);
 226:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }     
 227:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 228:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 229:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     if (USARTx == UART8)
  76              		.loc 1 229 5 is_stmt 1 view .LVU17
  77              		.loc 1 229 8 is_stmt 0 view .LVU18
  78 002c 324B     		ldr	r3, .L19+28
  79 002e 9842     		cmp	r0, r3
  80 0030 49D0     		beq	.L18
  81              	.LVL1:
  82              	.L1:
 230:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     { 
 231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART8, ENABLE);
 232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART8, DISABLE);
 233:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     }
 234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 235:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
  83              		.loc 1 235 1 view .LVU19
  84 0032 08BD     		pop	{r3, pc}
  85              	.LVL2:
  86              	.L11:
 194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  87              		.loc 1 194 5 is_stmt 1 view .LVU20
  88 0034 0121     		movs	r1, #1
  89 0036 1020     		movs	r0, #16
  90              	.LVL3:
 194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  91              		.loc 1 194 5 is_stmt 0 view .LVU21
  92 0038 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  93              	.LVL4:
 195:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
  94              		.loc 1 195 5 is_stmt 1 view .LVU22
  95 003c 0021     		movs	r1, #0
  96 003e 1020     		movs	r0, #16
  97 0040 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  98              	.LVL5:
  99 0044 F5E7     		b	.L1
 100              	.LVL6:
 101              	.L12:
 199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 102              		.loc 1 199 5 view .LVU23
 103 0046 0121     		movs	r1, #1
 104 0048 4FF40030 		mov	r0, #131072
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 7


 105              	.LVL7:
 199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 106              		.loc 1 199 5 is_stmt 0 view .LVU24
 107 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 108              	.LVL8:
 200:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 109              		.loc 1 200 5 is_stmt 1 view .LVU25
 110 0050 0021     		movs	r1, #0
 111 0052 4FF40030 		mov	r0, #131072
 112 0056 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 113              	.LVL9:
 114 005a EAE7     		b	.L1
 115              	.LVL10:
 116              	.L13:
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 117              		.loc 1 204 5 view .LVU26
 118 005c 0121     		movs	r1, #1
 119 005e 4FF48020 		mov	r0, #262144
 120              	.LVL11:
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 121              		.loc 1 204 5 is_stmt 0 view .LVU27
 122 0062 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 123              	.LVL12:
 205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }    
 124              		.loc 1 205 5 is_stmt 1 view .LVU28
 125 0066 0021     		movs	r1, #0
 126 0068 4FF48020 		mov	r0, #262144
 127 006c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 128              	.LVL13:
 129 0070 DFE7     		b	.L1
 130              	.LVL14:
 131              	.L14:
 209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 132              		.loc 1 209 5 view .LVU29
 133 0072 0121     		movs	r1, #1
 134 0074 4FF40020 		mov	r0, #524288
 135              	.LVL15:
 209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 136              		.loc 1 209 5 is_stmt 0 view .LVU30
 137 0078 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 138              	.LVL16:
 210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 139              		.loc 1 210 5 is_stmt 1 view .LVU31
 140 007c 0021     		movs	r1, #0
 141 007e 4FF40020 		mov	r0, #524288
 142 0082 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 143              	.LVL17:
 144 0086 D4E7     		b	.L1
 145              	.LVL18:
 146              	.L15:
 214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 147              		.loc 1 214 5 view .LVU32
 148 0088 0121     		movs	r1, #1
 149 008a 4FF48010 		mov	r0, #1048576
 150              	.LVL19:
 214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 151              		.loc 1 214 5 is_stmt 0 view .LVU33
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 8


 152 008e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 153              	.LVL20:
 215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }  
 154              		.loc 1 215 5 is_stmt 1 view .LVU34
 155 0092 0021     		movs	r1, #0
 156 0094 4FF48010 		mov	r0, #1048576
 157 0098 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 158              	.LVL21:
 159 009c C9E7     		b	.L1
 160              	.LVL22:
 161              	.L16:
 219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 162              		.loc 1 219 5 view .LVU35
 163 009e 0121     		movs	r1, #1
 164 00a0 2020     		movs	r0, #32
 165              	.LVL23:
 219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 166              		.loc 1 219 5 is_stmt 0 view .LVU36
 167 00a2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 168              	.LVL24:
 220:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 169              		.loc 1 220 5 is_stmt 1 view .LVU37
 170 00a6 0021     		movs	r1, #0
 171 00a8 2020     		movs	r0, #32
 172 00aa FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 173              	.LVL25:
 174 00ae C0E7     		b	.L1
 175              	.LVL26:
 176              	.L17:
 224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART7, DISABLE);
 177              		.loc 1 224 5 view .LVU38
 178 00b0 0121     		movs	r1, #1
 179 00b2 4FF08040 		mov	r0, #1073741824
 180              	.LVL27:
 224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART7, DISABLE);
 181              		.loc 1 224 5 is_stmt 0 view .LVU39
 182 00b6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 183              	.LVL28:
 225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }     
 184              		.loc 1 225 5 is_stmt 1 view .LVU40
 185 00ba 0021     		movs	r1, #0
 186 00bc 4FF08040 		mov	r0, #1073741824
 187 00c0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 188              	.LVL29:
 189 00c4 B5E7     		b	.L1
 190              	.LVL30:
 191              	.L18:
 231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART8, DISABLE);
 192              		.loc 1 231 7 view .LVU41
 193 00c6 0121     		movs	r1, #1
 194 00c8 4FF00040 		mov	r0, #-2147483648
 195              	.LVL31:
 231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART8, DISABLE);
 196              		.loc 1 231 7 is_stmt 0 view .LVU42
 197 00cc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 198              	.LVL32:
 232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     }
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 9


 199              		.loc 1 232 7 is_stmt 1 view .LVU43
 200 00d0 0021     		movs	r1, #0
 201 00d2 4FF00040 		mov	r0, #-2147483648
 202 00d6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 203              	.LVL33:
 204              		.loc 1 235 1 is_stmt 0 view .LVU44
 205 00da AAE7     		b	.L1
 206              	.L20:
 207              		.align	2
 208              	.L19:
 209 00dc 00100140 		.word	1073811456
 210 00e0 00440040 		.word	1073759232
 211 00e4 00480040 		.word	1073760256
 212 00e8 004C0040 		.word	1073761280
 213 00ec 00500040 		.word	1073762304
 214 00f0 00140140 		.word	1073812480
 215 00f4 00780040 		.word	1073772544
 216 00f8 007C0040 		.word	1073773568
 217              		.cfi_endproc
 218              	.LFE123:
 220              		.section	.text.USART_Init,"ax",%progbits
 221              		.align	1
 222              		.global	USART_Init
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	USART_Init:
 229              	.LVL34:
 230              	.LFB124:
 236:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 237:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 238:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral according to the specified
 239:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         parameters in the USART_InitStruct .
 240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 242:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure that contains
 243:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         the configuration information for the specified USART peripheral.
 244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 246:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
 247:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 231              		.loc 1 247 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 16
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		.loc 1 247 1 is_stmt 0 view .LVU46
 236 0000 30B5     		push	{r4, r5, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 12
 239              		.cfi_offset 4, -12
 240              		.cfi_offset 5, -8
 241              		.cfi_offset 14, -4
 242 0002 85B0     		sub	sp, sp, #20
 243              	.LCFI2:
 244              		.cfi_def_cfa_offset 32
 245 0004 0446     		mov	r4, r0
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 10


 246 0006 0D46     		mov	r5, r1
 248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00, apbclock = 0x00;
 247              		.loc 1 248 3 is_stmt 1 view .LVU47
 248              	.LVL35:
 249:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t integerdivider = 0x00;
 249              		.loc 1 249 3 view .LVU48
 250:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t fractionaldivider = 0x00;
 250              		.loc 1 250 3 view .LVU49
 251:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   RCC_ClocksTypeDef RCC_ClocksStatus;
 251              		.loc 1 251 3 view .LVU50
 252:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 254:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 252              		.loc 1 254 3 view .LVU51
 255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 253              		.loc 1 255 3 view .LVU52
 256:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 254              		.loc 1 256 3 view .LVU53
 257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 255              		.loc 1 257 3 view .LVU54
 258:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 256              		.loc 1 258 3 view .LVU55
 259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 257              		.loc 1 259 3 view .LVU56
 260:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 258              		.loc 1 260 3 view .LVU57
 261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 263:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
 259              		.loc 1 263 3 view .LVU58
 264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 265:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 260              		.loc 1 265 5 view .LVU59
 266:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 267:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 268:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 261              		.loc 1 269 3 view .LVU60
 262              		.loc 1 269 18 is_stmt 0 view .LVU61
 263 0008 038A     		ldrh	r3, [r0, #16]
 264 000a 9BB2     		uxth	r3, r3
 265              	.LVL36:
 270:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear STOP[13:12] bits */
 272:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 266              		.loc 1 272 3 is_stmt 1 view .LVU62
 267              		.loc 1 272 10 is_stmt 0 view .LVU63
 268 000c 23F44053 		bic	r3, r3, #12288
 269              	.LVL37:
 273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 274:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit :
 275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       Set STOP[13:12] bits according to USART_StopBits value */
 276:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 270              		.loc 1 276 3 is_stmt 1 view .LVU64
 271              		.loc 1 276 39 is_stmt 0 view .LVU65
 272 0010 CA88     		ldrh	r2, [r1, #6]
 273              	.LVL38:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 11


 277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 278:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 279:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 274              		.loc 1 279 3 is_stmt 1 view .LVU66
 275              		.loc 1 279 17 is_stmt 0 view .LVU67
 276 0012 1343     		orrs	r3, r3, r2
 277              	.LVL39:
 278              		.loc 1 279 15 view .LVU68
 279 0014 0382     		strh	r3, [r0, #16]	@ movhi
 280:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 281:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR1 Configuration -----------------------*/
 282:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR1;
 280              		.loc 1 282 3 is_stmt 1 view .LVU69
 281              		.loc 1 282 18 is_stmt 0 view .LVU70
 282 0016 8389     		ldrh	r3, [r0, #12]
 283              	.LVL40:
 284              		.loc 1 282 18 view .LVU71
 285 0018 9BB2     		uxth	r3, r3
 286              	.LVL41:
 283:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 284:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
 285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 287              		.loc 1 285 3 is_stmt 1 view .LVU72
 288              		.loc 1 285 10 is_stmt 0 view .LVU73
 289 001a 23F4B053 		bic	r3, r3, #5632
 290              	.LVL42:
 291              		.loc 1 285 10 view .LVU74
 292 001e 23F00C03 		bic	r3, r3, #12
 293              	.LVL43:
 286:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 287:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Word Length, Parity and mode: 
 288:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set the M bits according to USART_WordLength value 
 289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set PCE and PS bits according to USART_Parity value
 290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set TE and RE bits according to USART_Mode value */
 291:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 294              		.loc 1 291 3 is_stmt 1 view .LVU75
 295              		.loc 1 291 39 is_stmt 0 view .LVU76
 296 0022 8988     		ldrh	r1, [r1, #4]
 297              	.LVL44:
 298              		.loc 1 291 76 view .LVU77
 299 0024 2889     		ldrh	r0, [r5, #8]
 300              	.LVL45:
 292:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 301              		.loc 1 292 29 view .LVU78
 302 0026 6A89     		ldrh	r2, [r5, #10]
 291:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 303              		.loc 1 291 91 view .LVU79
 304 0028 0143     		orrs	r1, r1, r0
 305 002a 0A43     		orrs	r2, r2, r1
 306              	.LVL46:
 293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 294:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR1 */
 295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 = (uint16_t)tmpreg;
 307              		.loc 1 295 3 is_stmt 1 view .LVU80
 308              		.loc 1 295 17 is_stmt 0 view .LVU81
 309 002c 1343     		orrs	r3, r3, r2
 310              	.LVL47:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 12


 311              		.loc 1 295 15 view .LVU82
 312 002e A381     		strh	r3, [r4, #12]	@ movhi
 296:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR3 Configuration -----------------------*/  
 298:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR3;
 313              		.loc 1 298 3 is_stmt 1 view .LVU83
 314              		.loc 1 298 18 is_stmt 0 view .LVU84
 315 0030 A38A     		ldrh	r3, [r4, #20]
 316              	.LVL48:
 317              		.loc 1 298 18 view .LVU85
 318 0032 9BB2     		uxth	r3, r3
 319              	.LVL49:
 299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 300:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear CTSE and RTSE bits */
 301:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR3_CLEAR_MASK);
 320              		.loc 1 301 3 is_stmt 1 view .LVU86
 321              		.loc 1 301 10 is_stmt 0 view .LVU87
 322 0034 23F44073 		bic	r3, r3, #768
 323              	.LVL50:
 302:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 303:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART HFC : 
 304:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
 305:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 324              		.loc 1 305 3 is_stmt 1 view .LVU88
 325              		.loc 1 305 29 is_stmt 0 view .LVU89
 326 0038 AA89     		ldrh	r2, [r5, #12]
 327              	.LVL51:
 306:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 307:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR3 */
 308:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 = (uint16_t)tmpreg;
 328              		.loc 1 308 3 is_stmt 1 view .LVU90
 329              		.loc 1 308 17 is_stmt 0 view .LVU91
 330 003a 1343     		orrs	r3, r3, r2
 331              	.LVL52:
 332              		.loc 1 308 15 view .LVU92
 333 003c A382     		strh	r3, [r4, #20]	@ movhi
 309:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 310:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART BRR Configuration -----------------------*/
 311:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Baud Rate */
 312:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   RCC_GetClocksFreq(&RCC_ClocksStatus);
 334              		.loc 1 312 3 is_stmt 1 view .LVU93
 335 003e 6846     		mov	r0, sp
 336 0040 FFF7FEFF 		bl	RCC_GetClocksFreq
 337              	.LVL53:
 313:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 314:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx == USART1) || (USARTx == USART6))
 338              		.loc 1 314 3 view .LVU94
 339              		.loc 1 314 6 is_stmt 0 view .LVU95
 340 0044 204B     		ldr	r3, .L32
 341 0046 9C42     		cmp	r4, r3
 342 0048 05D0     		beq	.L22
 343              		.loc 1 314 26 discriminator 1 view .LVU96
 344 004a 03F58063 		add	r3, r3, #1024
 345 004e 9C42     		cmp	r4, r3
 346 0050 01D0     		beq	.L22
 315:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 316:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK2_Frequency;
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 13


 317:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 318:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 319:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 320:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 347              		.loc 1 320 5 is_stmt 1 view .LVU97
 348              		.loc 1 320 14 is_stmt 0 view .LVU98
 349 0052 029B     		ldr	r3, [sp, #8]
 350              	.LVL54:
 351              		.loc 1 320 14 view .LVU99
 352 0054 00E0     		b	.L24
 353              	.LVL55:
 354              	.L22:
 316:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 355              		.loc 1 316 5 is_stmt 1 view .LVU100
 316:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 356              		.loc 1 316 14 is_stmt 0 view .LVU101
 357 0056 039B     		ldr	r3, [sp, #12]
 358              	.LVL56:
 359              	.L24:
 321:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 322:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 323:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Determine the integer part */
 324:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 360              		.loc 1 324 3 is_stmt 1 view .LVU102
 361              		.loc 1 324 14 is_stmt 0 view .LVU103
 362 0058 A289     		ldrh	r2, [r4, #12]
 363              		.loc 1 324 6 view .LVU104
 364 005a 12F4004F 		tst	r2, #32768
 365 005e 1FD1     		bne	.L30
 325:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 326:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 8 Samples */
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
 328:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 329:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 330:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 331:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 16 Samples */
 332:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 366              		.loc 1 332 5 is_stmt 1 view .LVU105
 367              		.loc 1 332 27 is_stmt 0 view .LVU106
 368 0060 03EB8303 		add	r3, r3, r3, lsl #2
 369              	.LVL57:
 370              		.loc 1 332 27 view .LVU107
 371 0064 03EB8303 		add	r3, r3, r3, lsl #2
 372              		.loc 1 332 63 view .LVU108
 373 0068 2968     		ldr	r1, [r5]
 374              		.loc 1 332 44 view .LVU109
 375 006a 8900     		lsls	r1, r1, #2
 376              		.loc 1 332 20 view .LVU110
 377 006c B3FBF1F1 		udiv	r1, r3, r1
 378              	.LVL58:
 379              	.L26:
 333:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 334:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = (integerdivider / 100) << 4;
 380              		.loc 1 334 3 is_stmt 1 view .LVU111
 381              		.loc 1 334 28 is_stmt 0 view .LVU112
 382 0070 164B     		ldr	r3, .L32+4
 383 0072 A3FB0123 		umull	r2, r3, r3, r1
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 14


 384 0076 5809     		lsrs	r0, r3, #5
 385              		.loc 1 334 10 view .LVU113
 386 0078 0501     		lsls	r5, r0, #4
 387              	.LVL59:
 335:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 336:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Determine the fractional part */
 337:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 388              		.loc 1 337 3 is_stmt 1 view .LVU114
 389              		.loc 1 337 21 is_stmt 0 view .LVU115
 390 007a 6423     		movs	r3, #100
 391 007c 00FB1313 		mls	r3, r0, r3, r1
 392              	.LVL60:
 338:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 339:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Implement the fractional part in the register */
 340:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 393              		.loc 1 340 3 is_stmt 1 view .LVU116
 394              		.loc 1 340 14 is_stmt 0 view .LVU117
 395 0080 A289     		ldrh	r2, [r4, #12]
 396              		.loc 1 340 6 view .LVU118
 397 0082 12F4004F 		tst	r2, #32768
 398 0086 14D1     		bne	.L31
 341:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 343:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 344:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 345:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 346:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
 399              		.loc 1 346 5 is_stmt 1 view .LVU119
 400              		.loc 1 346 37 is_stmt 0 view .LVU120
 401 0088 1B01     		lsls	r3, r3, #4
 402              	.LVL61:
 403              		.loc 1 346 43 view .LVU121
 404 008a 3233     		adds	r3, r3, #50
 405              		.loc 1 346 49 view .LVU122
 406 008c 0F4A     		ldr	r2, .L32+4
 407 008e A2FB0323 		umull	r2, r3, r2, r3
 408              		.loc 1 346 57 view .LVU123
 409 0092 C3F34313 		ubfx	r3, r3, #5, #4
 410              		.loc 1 346 12 view .LVU124
 411 0096 2B43     		orrs	r3, r3, r5
 412              	.LVL62:
 413              	.L28:
 347:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 348:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 349:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART BRR register */
 350:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->BRR = (uint16_t)tmpreg;
 414              		.loc 1 350 3 is_stmt 1 view .LVU125
 415              		.loc 1 350 17 is_stmt 0 view .LVU126
 416 0098 9BB2     		uxth	r3, r3
 417              	.LVL63:
 418              		.loc 1 350 15 view .LVU127
 419 009a 2381     		strh	r3, [r4, #8]	@ movhi
 351:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 420              		.loc 1 351 1 view .LVU128
 421 009c 05B0     		add	sp, sp, #20
 422              	.LCFI3:
 423              		.cfi_remember_state
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 15


 424              		.cfi_def_cfa_offset 12
 425              		@ sp needed
 426 009e 30BD     		pop	{r4, r5, pc}
 427              	.LVL64:
 428              	.L30:
 429              	.LCFI4:
 430              		.cfi_restore_state
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 431              		.loc 1 327 5 is_stmt 1 view .LVU129
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 432              		.loc 1 327 27 is_stmt 0 view .LVU130
 433 00a0 03EB8303 		add	r3, r3, r3, lsl #2
 434              	.LVL65:
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 435              		.loc 1 327 27 view .LVU131
 436 00a4 03EB8303 		add	r3, r3, r3, lsl #2
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 437              		.loc 1 327 63 view .LVU132
 438 00a8 2968     		ldr	r1, [r5]
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 439              		.loc 1 327 44 view .LVU133
 440 00aa 4900     		lsls	r1, r1, #1
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 441              		.loc 1 327 20 view .LVU134
 442 00ac B3FBF1F1 		udiv	r1, r3, r1
 443              	.LVL66:
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 444              		.loc 1 327 20 view .LVU135
 445 00b0 DEE7     		b	.L26
 446              	.LVL67:
 447              	.L31:
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 448              		.loc 1 342 5 is_stmt 1 view .LVU136
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 449              		.loc 1 342 37 is_stmt 0 view .LVU137
 450 00b2 DA00     		lsls	r2, r3, #3
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 451              		.loc 1 342 42 view .LVU138
 452 00b4 3232     		adds	r2, r2, #50
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 453              		.loc 1 342 48 view .LVU139
 454 00b6 054B     		ldr	r3, .L32+4
 455              	.LVL68:
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 456              		.loc 1 342 48 view .LVU140
 457 00b8 A3FB0232 		umull	r3, r2, r3, r2
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 458              		.loc 1 342 56 view .LVU141
 459 00bc C2F34212 		ubfx	r2, r2, #5, #3
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 460              		.loc 1 342 12 view .LVU142
 461 00c0 42EA0503 		orr	r3, r2, r5
 462              	.LVL69:
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 463              		.loc 1 342 12 view .LVU143
 464 00c4 E8E7     		b	.L28
 465              	.L33:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 16


 466 00c6 00BF     		.align	2
 467              	.L32:
 468 00c8 00100140 		.word	1073811456
 469 00cc 1F85EB51 		.word	1374389535
 470              		.cfi_endproc
 471              	.LFE124:
 473              		.section	.text.USART_StructInit,"ax",%progbits
 474              		.align	1
 475              		.global	USART_StructInit
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv4-sp-d16
 481              	USART_StructInit:
 482              	.LVL70:
 483              	.LFB125:
 352:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 353:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 354:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Fills each USART_InitStruct member with its default value.
 355:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure which will
 356:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         be initialized.
 357:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 358:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 359:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
 360:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 484              		.loc 1 360 1 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 361:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* USART_InitStruct members default value */
 362:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_BaudRate = 9600;
 489              		.loc 1 362 3 view .LVU145
 490              		.loc 1 362 36 is_stmt 0 view .LVU146
 491 0000 4FF41653 		mov	r3, #9600
 492 0004 0360     		str	r3, [r0]
 363:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 493              		.loc 1 363 3 is_stmt 1 view .LVU147
 494              		.loc 1 363 38 is_stmt 0 view .LVU148
 495 0006 0023     		movs	r3, #0
 496 0008 8380     		strh	r3, [r0, #4]	@ movhi
 364:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 497              		.loc 1 364 3 is_stmt 1 view .LVU149
 498              		.loc 1 364 36 is_stmt 0 view .LVU150
 499 000a C380     		strh	r3, [r0, #6]	@ movhi
 365:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 500              		.loc 1 365 3 is_stmt 1 view .LVU151
 501              		.loc 1 365 34 is_stmt 0 view .LVU152
 502 000c 0381     		strh	r3, [r0, #8]	@ movhi
 366:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 503              		.loc 1 366 3 is_stmt 1 view .LVU153
 504              		.loc 1 366 32 is_stmt 0 view .LVU154
 505 000e 0C22     		movs	r2, #12
 506 0010 4281     		strh	r2, [r0, #10]	@ movhi
 367:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
 507              		.loc 1 367 3 is_stmt 1 view .LVU155
 508              		.loc 1 367 47 is_stmt 0 view .LVU156
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 17


 509 0012 8381     		strh	r3, [r0, #12]	@ movhi
 368:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 510              		.loc 1 368 1 view .LVU157
 511 0014 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE125:
 515              		.section	.text.USART_ClockInit,"ax",%progbits
 516              		.align	1
 517              		.global	USART_ClockInit
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	USART_ClockInit:
 524              	.LVL71:
 525              	.LFB126:
 369:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 370:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 371:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral Clock according to the 
 372:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         specified parameters in the USART_ClockInitStruct .
 373:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART peripheral.
 374:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure that
 375:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         contains the configuration information for the specified  USART peripheral.
 376:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   The Smart Card and Synchronous modes are not available for UART4 and UART5.    
 377:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 378:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 379:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
 380:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 526              		.loc 1 380 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531              		.loc 1 380 1 is_stmt 0 view .LVU159
 532 0000 70B4     		push	{r4, r5, r6}
 533              	.LCFI5:
 534              		.cfi_def_cfa_offset 12
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 6, -4
 381:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00;
 538              		.loc 1 381 3 is_stmt 1 view .LVU160
 539              	.LVL72:
 382:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 540              		.loc 1 383 3 view .LVU161
 384:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
 541              		.loc 1 384 3 view .LVU162
 385:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
 542              		.loc 1 385 3 view .LVU163
 386:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
 543              		.loc 1 386 3 view .LVU164
 387:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
 544              		.loc 1 387 3 view .LVU165
 388:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 389:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 390:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 18


 545              		.loc 1 390 3 view .LVU166
 546              		.loc 1 390 18 is_stmt 0 view .LVU167
 547 0002 038A     		ldrh	r3, [r0, #16]
 548 0004 9BB2     		uxth	r3, r3
 549              	.LVL73:
 391:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear CLKEN, CPOL, CPHA and LBCL bits */
 392:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR2_CLOCK_CLEAR_MASK);
 550              		.loc 1 392 3 is_stmt 1 view .LVU168
 551              		.loc 1 392 10 is_stmt 0 view .LVU169
 552 0006 23F47062 		bic	r2, r3, #3840
 553              	.LVL74:
 393:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Clock, CPOL, CPHA and LastBit ------------*/
 394:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CLKEN bit according to USART_Clock value */
 395:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CPOL bit according to USART_CPOL value */
 396:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CPHA bit according to USART_CPHA value */
 397:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set LBCL bit according to USART_LastBit value */
 398:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 554              		.loc 1 398 3 is_stmt 1 view .LVU170
 555              		.loc 1 398 44 is_stmt 0 view .LVU171
 556 000a 0D88     		ldrh	r5, [r1]
 557              		.loc 1 398 81 view .LVU172
 558 000c 4E88     		ldrh	r6, [r1, #2]
 399:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                  USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
 559              		.loc 1 399 39 view .LVU173
 560 000e 8C88     		ldrh	r4, [r1, #4]
 561              		.loc 1 399 75 view .LVU174
 562 0010 CB88     		ldrh	r3, [r1, #6]
 563              		.loc 1 399 52 view .LVU175
 564 0012 3543     		orrs	r5, r5, r6
 565 0014 2C43     		orrs	r4, r4, r5
 566 0016 2343     		orrs	r3, r3, r4
 567              	.LVL75:
 400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 401:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 568              		.loc 1 401 3 is_stmt 1 view .LVU176
 569              		.loc 1 401 17 is_stmt 0 view .LVU177
 570 0018 1343     		orrs	r3, r3, r2
 571              	.LVL76:
 572              		.loc 1 401 15 view .LVU178
 573 001a 0382     		strh	r3, [r0, #16]	@ movhi
 402:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 574              		.loc 1 402 1 view .LVU179
 575 001c 70BC     		pop	{r4, r5, r6}
 576              	.LCFI6:
 577              		.cfi_restore 6
 578              		.cfi_restore 5
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581 001e 7047     		bx	lr
 582              		.cfi_endproc
 583              	.LFE126:
 585              		.section	.text.USART_ClockStructInit,"ax",%progbits
 586              		.align	1
 587              		.global	USART_ClockStructInit
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 19


 591              		.fpu fpv4-sp-d16
 593              	USART_ClockStructInit:
 594              	.LVL77:
 595              	.LFB127:
 403:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 405:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Fills each USART_ClockInitStruct member with its default value.
 406:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure
 407:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         which will be initialized.
 408:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 409:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 410:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
 411:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 596              		.loc 1 411 1 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 412:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* USART_ClockInitStruct members default value */
 413:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
 601              		.loc 1 413 3 view .LVU181
 602              		.loc 1 413 38 is_stmt 0 view .LVU182
 603 0000 0023     		movs	r3, #0
 604 0002 0380     		strh	r3, [r0]	@ movhi
 414:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
 605              		.loc 1 414 3 is_stmt 1 view .LVU183
 606              		.loc 1 414 37 is_stmt 0 view .LVU184
 607 0004 4380     		strh	r3, [r0, #2]	@ movhi
 415:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
 608              		.loc 1 415 3 is_stmt 1 view .LVU185
 609              		.loc 1 415 37 is_stmt 0 view .LVU186
 610 0006 8380     		strh	r3, [r0, #4]	@ movhi
 416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
 611              		.loc 1 416 3 is_stmt 1 view .LVU187
 612              		.loc 1 416 40 is_stmt 0 view .LVU188
 613 0008 C380     		strh	r3, [r0, #6]	@ movhi
 417:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 614              		.loc 1 417 1 view .LVU189
 615 000a 7047     		bx	lr
 616              		.cfi_endproc
 617              	.LFE127:
 619              		.section	.text.USART_Cmd,"ax",%progbits
 620              		.align	1
 621              		.global	USART_Cmd
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	USART_Cmd:
 628              	.LVL78:
 629              	.LFB128:
 418:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 419:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 420:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART peripheral.
 421:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 422:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 423:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USARTx peripheral.
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 20


 424:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 425:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 426:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 427:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 428:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 630              		.loc 1 428 1 is_stmt 1 view -0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 429:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 430:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 635              		.loc 1 430 3 view .LVU191
 431:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 636              		.loc 1 431 3 view .LVU192
 432:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 433:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 637              		.loc 1 433 3 view .LVU193
 638              		.loc 1 433 6 is_stmt 0 view .LVU194
 639 0000 21B1     		cbz	r1, .L39
 434:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 435:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the selected USART by setting the UE bit in the CR1 register */
 436:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_UE;
 640              		.loc 1 436 5 is_stmt 1 view .LVU195
 641              		.loc 1 436 17 is_stmt 0 view .LVU196
 642 0002 8389     		ldrh	r3, [r0, #12]
 643 0004 43F40053 		orr	r3, r3, #8192
 644 0008 8381     		strh	r3, [r0, #12]	@ movhi
 645 000a 7047     		bx	lr
 646              	.L39:
 437:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 438:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 439:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 440:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the selected USART by clearing the UE bit in the CR1 register */
 441:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_UE);
 647              		.loc 1 441 5 is_stmt 1 view .LVU197
 648              		.loc 1 441 17 is_stmt 0 view .LVU198
 649 000c 8389     		ldrh	r3, [r0, #12]
 650 000e 9BB2     		uxth	r3, r3
 651 0010 23F40053 		bic	r3, r3, #8192
 652 0014 9BB2     		uxth	r3, r3
 653 0016 8381     		strh	r3, [r0, #12]	@ movhi
 442:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 443:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 654              		.loc 1 443 1 view .LVU199
 655 0018 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE128:
 659              		.section	.text.USART_SetPrescaler,"ax",%progbits
 660              		.align	1
 661              		.global	USART_SetPrescaler
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu fpv4-sp-d16
 667              	USART_SetPrescaler:
 668              	.LVL79:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 21


 669              	.LFB129:
 444:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 445:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 446:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the system clock prescaler.
 447:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 448:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 449:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_Prescaler: specifies the prescaler clock. 
 450:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   The function is used for IrDA mode with UART4 and UART5.   
 451:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 452:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 453:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
 454:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** { 
 670              		.loc 1 454 1 is_stmt 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 455:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 456:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 675              		.loc 1 456 3 view .LVU201
 457:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 458:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART prescaler */
 459:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_GT;
 676              		.loc 1 459 3 view .LVU202
 677              		.loc 1 459 16 is_stmt 0 view .LVU203
 678 0000 038B     		ldrh	r3, [r0, #24]
 679 0002 03F47F43 		and	r3, r3, #65280
 680 0006 0383     		strh	r3, [r0, #24]	@ movhi
 460:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART prescaler */
 461:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR |= USART_Prescaler;
 681              		.loc 1 461 3 is_stmt 1 view .LVU204
 682              		.loc 1 461 16 is_stmt 0 view .LVU205
 683 0008 038B     		ldrh	r3, [r0, #24]
 684 000a 1943     		orrs	r1, r1, r3
 685              	.LVL80:
 686              		.loc 1 461 16 view .LVU206
 687 000c 0183     		strh	r1, [r0, #24]	@ movhi
 462:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 688              		.loc 1 462 1 view .LVU207
 689 000e 7047     		bx	lr
 690              		.cfi_endproc
 691              	.LFE129:
 693              		.section	.text.USART_OverSampling8Cmd,"ax",%progbits
 694              		.align	1
 695              		.global	USART_OverSampling8Cmd
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu fpv4-sp-d16
 701              	USART_OverSampling8Cmd:
 702              	.LVL81:
 703              	.LFB130:
 463:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 464:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 465:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's 8x oversampling mode.
 466:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   This function has to be called before calling USART_Init() function
 467:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         in order to have correct baudrate Divider value.
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 22


 468:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 469:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 470:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART 8x oversampling mode.
 471:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 472:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 473:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 474:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 475:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 704              		.loc 1 475 1 is_stmt 1 view -0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 476:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 477:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 709              		.loc 1 477 3 view .LVU209
 478:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 710              		.loc 1 478 3 view .LVU210
 479:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 480:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 711              		.loc 1 480 3 view .LVU211
 712              		.loc 1 480 6 is_stmt 0 view .LVU212
 713 0000 21B1     		cbz	r1, .L43
 481:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 482:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the 8x Oversampling mode by setting the OVER8 bit in the CR1 register */
 483:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_OVER8;
 714              		.loc 1 483 5 is_stmt 1 view .LVU213
 715              		.loc 1 483 17 is_stmt 0 view .LVU214
 716 0002 8389     		ldrh	r3, [r0, #12]
 717 0004 43F40043 		orr	r3, r3, #32768
 718 0008 8381     		strh	r3, [r0, #12]	@ movhi
 719 000a 7047     		bx	lr
 720              	.L43:
 484:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 485:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 486:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 487:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the 8x Oversampling mode by clearing the OVER8 bit in the CR1 register */
 488:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_OVER8);
 721              		.loc 1 488 5 is_stmt 1 view .LVU215
 722              		.loc 1 488 17 is_stmt 0 view .LVU216
 723 000c 8389     		ldrh	r3, [r0, #12]
 724 000e C3F30E03 		ubfx	r3, r3, #0, #15
 725 0012 8381     		strh	r3, [r0, #12]	@ movhi
 489:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 490:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }  
 726              		.loc 1 490 1 view .LVU217
 727 0014 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE130:
 731              		.section	.text.USART_OneBitMethodCmd,"ax",%progbits
 732              		.align	1
 733              		.global	USART_OneBitMethodCmd
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	USART_OneBitMethodCmd:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 23


 740              	.LVL82:
 741              	.LFB131:
 491:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 492:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 493:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's one bit sampling method.
 494:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 495:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 496:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 497:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 498:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 499:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 500:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 501:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 742              		.loc 1 501 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 502:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 503:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 747              		.loc 1 503 3 view .LVU219
 504:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 748              		.loc 1 504 3 view .LVU220
 505:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 506:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 749              		.loc 1 506 3 view .LVU221
 750              		.loc 1 506 6 is_stmt 0 view .LVU222
 751 0000 21B1     		cbz	r1, .L46
 507:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 508:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the one bit method by setting the ONEBITE bit in the CR3 register */
 509:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_ONEBIT;
 752              		.loc 1 509 5 is_stmt 1 view .LVU223
 753              		.loc 1 509 17 is_stmt 0 view .LVU224
 754 0002 838A     		ldrh	r3, [r0, #20]
 755 0004 43F40063 		orr	r3, r3, #2048
 756 0008 8382     		strh	r3, [r0, #20]	@ movhi
 757 000a 7047     		bx	lr
 758              	.L46:
 510:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 511:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 512:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 513:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the one bit method by clearing the ONEBITE bit in the CR3 register */
 514:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_ONEBIT);
 759              		.loc 1 514 5 is_stmt 1 view .LVU225
 760              		.loc 1 514 17 is_stmt 0 view .LVU226
 761 000c 838A     		ldrh	r3, [r0, #20]
 762 000e 9BB2     		uxth	r3, r3
 763 0010 23F40063 		bic	r3, r3, #2048
 764 0014 9BB2     		uxth	r3, r3
 765 0016 8382     		strh	r3, [r0, #20]	@ movhi
 515:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 516:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 766              		.loc 1 516 1 view .LVU227
 767 0018 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE131:
 771              		.section	.text.USART_SendData,"ax",%progbits
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 24


 772              		.align	1
 773              		.global	USART_SendData
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv4-sp-d16
 779              	USART_SendData:
 780              	.LVL83:
 781              	.LFB132:
 517:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 518:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 519:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 520:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 521:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 522:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group2 Data transfers functions
 523:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Data transfers functions 
 524:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 525:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 526:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 527:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                       ##### Data transfers functions #####
 528:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 529:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 530:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to manage the USART data 
 531:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     transfers.
 532:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 533:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     During an USART reception, data shifts in least significant bit first through 
 534:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     the RX pin. In this mode, the USART_DR register consists of a buffer (RDR) 
 535:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     between the internal bus and the received shift register.
 536:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 537:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     When a transmission is taking place, a write instruction to the USART_DR register 
 538:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     stores the data in the TDR register and which is copied in the shift register 
 539:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     at the end of the current transmission.
 540:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 541:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     The read access of the USART_DR register can be done using the USART_ReceiveData()
 542:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     function and returns the RDR buffered value. Whereas a write access to the USART_DR 
 543:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     can be done using USART_SendData() function and stores the written data into 
 544:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     TDR buffer.
 545:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 546:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 547:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 548:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 549:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 550:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 551:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Transmits single data through the USARTx peripheral.
 552:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 553:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 554:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  Data: the data to transmit.
 555:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 556:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 557:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
 558:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 782              		.loc 1 558 1 is_stmt 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 559:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 25


 560:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 787              		.loc 1 560 3 view .LVU229
 561:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_DATA(Data)); 
 788              		.loc 1 561 3 view .LVU230
 562:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
 563:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Transmit Data */
 564:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->DR = (Data & (uint16_t)0x01FF);
 789              		.loc 1 564 3 view .LVU231
 790              		.loc 1 564 22 is_stmt 0 view .LVU232
 791 0000 C1F30801 		ubfx	r1, r1, #0, #9
 792              	.LVL84:
 793              		.loc 1 564 14 view .LVU233
 794 0004 8180     		strh	r1, [r0, #4]	@ movhi
 565:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 795              		.loc 1 565 1 view .LVU234
 796 0006 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE132:
 800              		.section	.text.USART_ReceiveData,"ax",%progbits
 801              		.align	1
 802              		.global	USART_ReceiveData
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	USART_ReceiveData:
 809              	.LVL85:
 810              	.LFB133:
 566:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 567:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 568:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Returns the most recent received data by the USARTx peripheral.
 569:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 570:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 571:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The received data.
 572:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 573:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
 574:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 811              		.loc 1 574 1 is_stmt 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 575:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 576:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 816              		.loc 1 576 3 view .LVU236
 577:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 578:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Receive Data */
 579:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
 817              		.loc 1 579 3 view .LVU237
 818              		.loc 1 579 27 is_stmt 0 view .LVU238
 819 0000 8088     		ldrh	r0, [r0, #4]
 820              	.LVL86:
 580:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 821              		.loc 1 580 1 view .LVU239
 822 0002 C0F30800 		ubfx	r0, r0, #0, #9
 823 0006 7047     		bx	lr
 824              		.cfi_endproc
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 26


 825              	.LFE133:
 827              		.section	.text.USART_SetAddress,"ax",%progbits
 828              		.align	1
 829              		.global	USART_SetAddress
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu fpv4-sp-d16
 835              	USART_SetAddress:
 836              	.LVL87:
 837              	.LFB134:
 581:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 582:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 583:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 584:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 585:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 586:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group3 MultiProcessor Communication functions
 587:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Multi-Processor Communication functions 
 588:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 589:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 590:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 591:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****               ##### Multi-Processor Communication functions #####
 592:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 593:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 594:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to manage the USART 
 595:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     multiprocessor communication.
 596:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 597:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     For instance one of the USARTs can be the master, its TX output is connected 
 598:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     to the RX input of the other USART. The others are slaves, their respective 
 599:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     TX outputs are logically ANDed together and connected to the RX input of the 
 600:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     master.
 601:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 602:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USART multiprocessor communication is possible through the following procedure:
 603:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the Baud rate, Word length = 9 bits, Stop bits, Parity, Mode 
 604:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           transmitter or Mode receiver and hardware flow control values using 
 605:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           the USART_Init() function.
 606:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the USART address using the USART_SetAddress() function.
 607:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the wake up method (USART_WakeUp_IdleLine or USART_WakeUp_AddressMark)
 608:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           using USART_WakeUpConfig() function only for the slaves.
 609:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the USART using the USART_Cmd() function.
 610:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enter the USART slaves in mute mode using USART_ReceiverWakeUpCmd() function.
 611:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 612:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     The USART Slave exit from mute mode when receive the wake up condition.
 613:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 614:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 615:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 616:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 617:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 618:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 619:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the address of the USART node.
 620:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 621:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 622:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_Address: Indicates the address of the USART node.
 623:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 624:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 625:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
 626:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 27


 838              		.loc 1 626 1 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 627:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 628:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 843              		.loc 1 628 3 view .LVU241
 629:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ADDRESS(USART_Address)); 
 844              		.loc 1 629 3 view .LVU242
 630:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
 631:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART address */
 632:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_ADD);
 845              		.loc 1 632 3 view .LVU243
 846              		.loc 1 632 15 is_stmt 0 view .LVU244
 847 0000 038A     		ldrh	r3, [r0, #16]
 848 0002 9BB2     		uxth	r3, r3
 849 0004 23F00F03 		bic	r3, r3, #15
 850 0008 9BB2     		uxth	r3, r3
 851 000a 0382     		strh	r3, [r0, #16]	@ movhi
 633:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART address node */
 634:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_Address;
 852              		.loc 1 634 3 is_stmt 1 view .LVU245
 853              		.loc 1 634 15 is_stmt 0 view .LVU246
 854 000c 038A     		ldrh	r3, [r0, #16]
 855 000e 1943     		orrs	r1, r1, r3
 856              	.LVL88:
 857              		.loc 1 634 15 view .LVU247
 858 0010 0182     		strh	r1, [r0, #16]	@ movhi
 635:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 859              		.loc 1 635 1 view .LVU248
 860 0012 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE134:
 864              		.section	.text.USART_ReceiverWakeUpCmd,"ax",%progbits
 865              		.align	1
 866              		.global	USART_ReceiverWakeUpCmd
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	USART_ReceiverWakeUpCmd:
 873              	.LVL89:
 874              	.LFB135:
 636:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 637:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 638:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Determines if the USART is in mute mode or not.
 639:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 640:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 641:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART mute mode.
 642:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 643:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 644:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 645:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 646:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 875              		.loc 1 646 1 is_stmt 1 view -0
 876              		.cfi_startproc
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 28


 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 647:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 648:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 880              		.loc 1 648 3 view .LVU250
 649:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 881              		.loc 1 649 3 view .LVU251
 650:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 651:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 882              		.loc 1 651 3 view .LVU252
 883              		.loc 1 651 6 is_stmt 0 view .LVU253
 884 0000 21B1     		cbz	r1, .L52
 652:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 653:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
 654:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_RWU;
 885              		.loc 1 654 5 is_stmt 1 view .LVU254
 886              		.loc 1 654 17 is_stmt 0 view .LVU255
 887 0002 8389     		ldrh	r3, [r0, #12]
 888 0004 43F00203 		orr	r3, r3, #2
 889 0008 8381     		strh	r3, [r0, #12]	@ movhi
 890 000a 7047     		bx	lr
 891              	.L52:
 655:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 656:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 657:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 658:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
 659:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_RWU);
 892              		.loc 1 659 5 is_stmt 1 view .LVU256
 893              		.loc 1 659 17 is_stmt 0 view .LVU257
 894 000c 8389     		ldrh	r3, [r0, #12]
 895 000e 9BB2     		uxth	r3, r3
 896 0010 23F00203 		bic	r3, r3, #2
 897 0014 9BB2     		uxth	r3, r3
 898 0016 8381     		strh	r3, [r0, #12]	@ movhi
 660:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 661:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 899              		.loc 1 661 1 view .LVU258
 900 0018 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE135:
 904              		.section	.text.USART_WakeUpConfig,"ax",%progbits
 905              		.align	1
 906              		.global	USART_WakeUpConfig
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv4-sp-d16
 912              	USART_WakeUpConfig:
 913              	.LVL90:
 914              	.LFB136:
 662:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 663:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Selects the USART WakeUp method.
 664:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 665:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 666:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_WakeUp: specifies the USART wakeup method.
 667:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 29


 668:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
 669:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_AddressMark: WakeUp by an address mark
 670:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 671:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 672:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
 673:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 915              		.loc 1 673 1 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 674:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 675:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 920              		.loc 1 675 3 view .LVU260
 676:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_WAKEUP(USART_WakeUp));
 921              		.loc 1 676 3 view .LVU261
 677:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 678:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_WAKE);
 922              		.loc 1 678 3 view .LVU262
 923              		.loc 1 678 15 is_stmt 0 view .LVU263
 924 0000 8389     		ldrh	r3, [r0, #12]
 925 0002 9BB2     		uxth	r3, r3
 926 0004 23F40063 		bic	r3, r3, #2048
 927 0008 9BB2     		uxth	r3, r3
 928 000a 8381     		strh	r3, [r0, #12]	@ movhi
 679:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_WakeUp;
 929              		.loc 1 679 3 is_stmt 1 view .LVU264
 930              		.loc 1 679 15 is_stmt 0 view .LVU265
 931 000c 8389     		ldrh	r3, [r0, #12]
 932 000e 1943     		orrs	r1, r1, r3
 933              	.LVL91:
 934              		.loc 1 679 15 view .LVU266
 935 0010 8181     		strh	r1, [r0, #12]	@ movhi
 680:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 936              		.loc 1 680 1 view .LVU267
 937 0012 7047     		bx	lr
 938              		.cfi_endproc
 939              	.LFE136:
 941              		.section	.text.USART_LINBreakDetectLengthConfig,"ax",%progbits
 942              		.align	1
 943              		.global	USART_LINBreakDetectLengthConfig
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	USART_LINBreakDetectLengthConfig:
 950              	.LVL92:
 951              	.LFB137:
 681:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 682:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 683:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 684:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 685:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 686:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group4 LIN mode functions
 687:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   LIN mode functions 
 688:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 689:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 30


 690:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 691:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                         ##### LIN mode functions #####
 692:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 693:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 694:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to manage the USART LIN 
 695:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     Mode communication.
 696:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 697:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In LIN mode, 8-bit data format with 1 stop bit is required in accordance with 
 698:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     the LIN standard.
 699:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 700:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     Only this LIN Feature is supported by the USART IP:
 701:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) LIN Master Synchronous Break send capability and LIN slave break detection
 702:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           capability :  13-bit break generation and 10/11 bit break detection
 703:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 704:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 705:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USART LIN Master transmitter communication is possible through the following 
 706:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     procedure:
 707:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 708:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         Mode transmitter or Mode receiver and hardware flow control values using 
 709:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         the USART_Init() function.
 710:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the USART using the USART_Cmd() function.
 711:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the LIN mode using the USART_LINCmd() function.
 712:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Send the break character using USART_SendBreak() function.
 713:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 714:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USART LIN Master receiver communication is possible through the following procedure:
 715:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 716:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           Mode transmitter or Mode receiver and hardware flow control values using 
 717:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           the USART_Init() function.
 718:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the USART using the USART_Cmd() function.
 719:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the break detection length using the USART_LINBreakDetectLengthConfig()
 720:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           function.
 721:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the LIN mode using the USART_LINCmd() function.
 722:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 723:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- In LIN mode, the following bits must be kept cleared:
 724:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        (+@) CLKEN in the USART_CR2 register,
 725:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        (+@) STOP[1:0], SCEN, HDSEL and IREN in the USART_CR3 register.
 726:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 727:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 728:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 729:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 730:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 731:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 732:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the USART LIN Break detection length.
 733:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 734:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 735:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_LINBreakDetectLength: specifies the LIN break detection length.
 736:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
 737:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_10b: 10-bit break detection
 738:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_11b: 11-bit break detection
 739:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 740:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 741:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
 742:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 952              		.loc 1 742 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 31


 956              		@ link register save eliminated.
 743:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 744:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 957              		.loc 1 744 3 view .LVU269
 745:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
 958              		.loc 1 745 3 view .LVU270
 746:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 747:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LBDL);
 959              		.loc 1 747 3 view .LVU271
 960              		.loc 1 747 15 is_stmt 0 view .LVU272
 961 0000 038A     		ldrh	r3, [r0, #16]
 962 0002 9BB2     		uxth	r3, r3
 963 0004 23F02003 		bic	r3, r3, #32
 964 0008 9BB2     		uxth	r3, r3
 965 000a 0382     		strh	r3, [r0, #16]	@ movhi
 748:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_LINBreakDetectLength;  
 966              		.loc 1 748 3 is_stmt 1 view .LVU273
 967              		.loc 1 748 15 is_stmt 0 view .LVU274
 968 000c 038A     		ldrh	r3, [r0, #16]
 969 000e 1943     		orrs	r1, r1, r3
 970              	.LVL93:
 971              		.loc 1 748 15 view .LVU275
 972 0010 0182     		strh	r1, [r0, #16]	@ movhi
 749:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 973              		.loc 1 749 1 view .LVU276
 974 0012 7047     		bx	lr
 975              		.cfi_endproc
 976              	.LFE137:
 978              		.section	.text.USART_LINCmd,"ax",%progbits
 979              		.align	1
 980              		.global	USART_LINCmd
 981              		.syntax unified
 982              		.thumb
 983              		.thumb_func
 984              		.fpu fpv4-sp-d16
 986              	USART_LINCmd:
 987              	.LVL94:
 988              	.LFB138:
 750:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 751:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 752:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's LIN mode.
 753:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 754:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 755:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART LIN mode.
 756:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 757:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 758:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 759:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 760:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 989              		.loc 1 760 1 is_stmt 1 view -0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              		@ link register save eliminated.
 761:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 762:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 994              		.loc 1 762 3 view .LVU278
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 32


 763:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 995              		.loc 1 763 3 view .LVU279
 764:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 765:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 996              		.loc 1 765 3 view .LVU280
 997              		.loc 1 765 6 is_stmt 0 view .LVU281
 998 0000 21B1     		cbz	r1, .L57
 766:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 767:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR2 |= USART_CR2_LINEN;
 999              		.loc 1 768 5 is_stmt 1 view .LVU282
 1000              		.loc 1 768 17 is_stmt 0 view .LVU283
 1001 0002 038A     		ldrh	r3, [r0, #16]
 1002 0004 43F48043 		orr	r3, r3, #16384
 1003 0008 0382     		strh	r3, [r0, #16]	@ movhi
 1004 000a 7047     		bx	lr
 1005              	.L57:
 769:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 770:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 771:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 772:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
 773:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LINEN);
 1006              		.loc 1 773 5 is_stmt 1 view .LVU284
 1007              		.loc 1 773 17 is_stmt 0 view .LVU285
 1008 000c 038A     		ldrh	r3, [r0, #16]
 1009 000e 9BB2     		uxth	r3, r3
 1010 0010 23F48043 		bic	r3, r3, #16384
 1011 0014 9BB2     		uxth	r3, r3
 1012 0016 0382     		strh	r3, [r0, #16]	@ movhi
 774:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 775:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1013              		.loc 1 775 1 view .LVU286
 1014 0018 7047     		bx	lr
 1015              		.cfi_endproc
 1016              	.LFE138:
 1018              		.section	.text.USART_SendBreak,"ax",%progbits
 1019              		.align	1
 1020              		.global	USART_SendBreak
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1024              		.fpu fpv4-sp-d16
 1026              	USART_SendBreak:
 1027              	.LVL95:
 1028              	.LFB139:
 776:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 777:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 778:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Transmits break characters.
 779:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 780:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 781:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 782:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 783:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SendBreak(USART_TypeDef* USARTx)
 784:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1029              		.loc 1 784 1 is_stmt 1 view -0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 33


 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
 785:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 786:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1034              		.loc 1 786 3 view .LVU288
 787:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 788:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Send break characters */
 789:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_CR1_SBK;
 1035              		.loc 1 789 3 view .LVU289
 1036              		.loc 1 789 15 is_stmt 0 view .LVU290
 1037 0000 8389     		ldrh	r3, [r0, #12]
 1038 0002 43F00103 		orr	r3, r3, #1
 1039 0006 8381     		strh	r3, [r0, #12]	@ movhi
 790:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1040              		.loc 1 790 1 view .LVU291
 1041 0008 7047     		bx	lr
 1042              		.cfi_endproc
 1043              	.LFE139:
 1045              		.section	.text.USART_HalfDuplexCmd,"ax",%progbits
 1046              		.align	1
 1047              		.global	USART_HalfDuplexCmd
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv4-sp-d16
 1053              	USART_HalfDuplexCmd:
 1054              	.LVL96:
 1055              	.LFB140:
 791:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 792:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 793:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 794:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 795:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 796:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group5 Halfduplex mode function
 797:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Half-duplex mode function 
 798:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 799:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 800:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 801:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                     ##### Half-duplex mode function #####
 802:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 803:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 804:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to manage the USART 
 805:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     Half-duplex communication.
 806:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 807:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     The USART can be configured to follow a single-wire half-duplex protocol where 
 808:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     the TX and RX lines are internally connected.
 809:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 810:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USART Half duplex communication is possible through the following procedure:
 811:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the Baud rate, Word length, Stop bits, Parity, Mode transmitter 
 812:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           or Mode receiver and hardware flow control values using the USART_Init()
 813:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           function.
 814:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the USART address using the USART_SetAddress() function.
 815:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the USART using the USART_Cmd() function.
 816:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the half duplex mode using USART_HalfDuplexCmd() function.
 817:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 818:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 819:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     -@- The RX pin is no longer used
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 34


 820:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     -@- In Half-duplex mode the following bits must be kept cleared:
 821:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+@) LINEN and CLKEN bits in the USART_CR2 register.
 822:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+@) SCEN and IREN bits in the USART_CR3 register.
 823:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 824:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 825:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 826:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 827:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 828:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 829:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Half Duplex communication.
 830:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
 831:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 832:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART Communication.
 833:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 834:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 835:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 836:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 837:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1056              		.loc 1 837 1 is_stmt 1 view -0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060              		@ link register save eliminated.
 838:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 839:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1061              		.loc 1 839 3 view .LVU293
 840:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1062              		.loc 1 840 3 view .LVU294
 841:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 842:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1063              		.loc 1 842 3 view .LVU295
 1064              		.loc 1 842 6 is_stmt 0 view .LVU296
 1065 0000 21B1     		cbz	r1, .L61
 843:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 844:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 845:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_HDSEL;
 1066              		.loc 1 845 5 is_stmt 1 view .LVU297
 1067              		.loc 1 845 17 is_stmt 0 view .LVU298
 1068 0002 838A     		ldrh	r3, [r0, #20]
 1069 0004 43F00803 		orr	r3, r3, #8
 1070 0008 8382     		strh	r3, [r0, #20]	@ movhi
 1071 000a 7047     		bx	lr
 1072              	.L61:
 846:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 847:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 848:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 849:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
 850:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_HDSEL);
 1073              		.loc 1 850 5 is_stmt 1 view .LVU299
 1074              		.loc 1 850 17 is_stmt 0 view .LVU300
 1075 000c 838A     		ldrh	r3, [r0, #20]
 1076 000e 9BB2     		uxth	r3, r3
 1077 0010 23F00803 		bic	r3, r3, #8
 1078 0014 9BB2     		uxth	r3, r3
 1079 0016 8382     		strh	r3, [r0, #20]	@ movhi
 851:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 852:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 35


 1080              		.loc 1 852 1 view .LVU301
 1081 0018 7047     		bx	lr
 1082              		.cfi_endproc
 1083              	.LFE140:
 1085              		.section	.text.USART_SetGuardTime,"ax",%progbits
 1086              		.align	1
 1087              		.global	USART_SetGuardTime
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu fpv4-sp-d16
 1093              	USART_SetGuardTime:
 1094              	.LVL97:
 1095              	.LFB141:
 853:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 854:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 855:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 856:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 857:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 858:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 859:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group6 Smartcard mode functions
 860:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Smartcard mode functions 
 861:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 862:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 863:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 864:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                               ##### Smartcard mode functions #####
 865:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 866:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 867:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to manage the USART 
 868:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     Smartcard communication.
 869:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 870:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     The Smartcard interface is designed to support asynchronous protocol Smartcards as
 871:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     defined in the ISO 7816-3 standard.
 872:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 873:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     The USART can provide a clock to the smartcard through the SCLK output.
 874:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In smartcard mode, SCLK is not associated to the communication but is simply derived 
 875:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     from the internal peripheral input clock through a 5-bit prescaler.
 876:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 877:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     Smartcard communication is possible through the following procedure:
 878:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the Smartcard Prescaler using the USART_SetPrescaler() function.
 879:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the Smartcard Guard Time using the USART_SetGuardTime() function.
 880:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the USART clock using the USART_ClockInit() function as following:
 881:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART Clock enabled
 882:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART CPOL Low
 883:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART CPHA on first edge
 884:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) USART Last Bit Clock Enabled
 885:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the Smartcard interface using the USART_Init() function as following:
 886:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Word Length = 9 Bits
 887:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) 1.5 Stop Bit
 888:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Even parity
 889:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) BaudRate = 12096 baud
 890:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Hardware flow control disabled (RTS and CTS signals)
 891:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (++) Tx and Rx enabled
 892:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) POptionally you can enable the parity error interrupt using the USART_ITConfig()
 893:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           function
 894:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) PEnable the USART using the USART_Cmd() function.
 895:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) PEnable the Smartcard NACK using the USART_SmartCardNACKCmd() function.
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 36


 896:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) PEnable the Smartcard interface using the USART_SmartCardCmd() function.
 897:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 898:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     Please refer to the ISO 7816-3 specification for more details.
 899:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 900:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- It is also possible to choose 0.5 stop bit for receiving but it is recommended 
 901:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           to use 1.5 stop bits for both transmitting and receiving to avoid switching 
 902:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           between the two configurations.
 903:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- In smartcard mode, the following bits must be kept cleared:
 904:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (+@) LINEN bit in the USART_CR2 register.
 905:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (+@) HDSEL and IREN bits in the USART_CR3 register.
 906:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- Smartcard mode is available on USART peripherals only (not available on UART4 
 907:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           and UART5 peripherals).
 908:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 909:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 910:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 911:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 912:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 913:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 914:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the specified USART guard time.
 915:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 916:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 917:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_GuardTime: specifies the guard time.   
 918:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 919:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 920:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
 921:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {    
 1096              		.loc 1 921 1 is_stmt 1 view -0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              		@ link register save eliminated.
 922:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 923:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 1101              		.loc 1 923 3 view .LVU303
 924:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 925:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART Guard time */
 926:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_PSC;
 1102              		.loc 1 926 3 view .LVU304
 1103              		.loc 1 926 16 is_stmt 0 view .LVU305
 1104 0000 038B     		ldrh	r3, [r0, #24]
 1105 0002 DBB2     		uxtb	r3, r3
 1106 0004 0383     		strh	r3, [r0, #24]	@ movhi
 927:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART guard time */
 928:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
 1107              		.loc 1 928 3 is_stmt 1 view .LVU306
 1108              		.loc 1 928 16 is_stmt 0 view .LVU307
 1109 0006 038B     		ldrh	r3, [r0, #24]
 1110 0008 43EA0121 		orr	r1, r3, r1, lsl #8
 1111              	.LVL98:
 1112              		.loc 1 928 16 view .LVU308
 1113 000c 0183     		strh	r1, [r0, #24]	@ movhi
 929:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1114              		.loc 1 929 1 view .LVU309
 1115 000e 7047     		bx	lr
 1116              		.cfi_endproc
 1117              	.LFE141:
 1119              		.section	.text.USART_SmartCardCmd,"ax",%progbits
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 37


 1120              		.align	1
 1121              		.global	USART_SmartCardCmd
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu fpv4-sp-d16
 1127              	USART_SmartCardCmd:
 1128              	.LVL99:
 1129              	.LFB142:
 930:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 931:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 932:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Smart Card mode.
 933:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 934:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 935:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the Smart Card mode.
 936:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.      
 937:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 938:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 939:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 940:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1130              		.loc 1 940 1 is_stmt 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134              		@ link register save eliminated.
 941:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 942:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 1135              		.loc 1 942 3 view .LVU311
 943:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1136              		.loc 1 943 3 view .LVU312
 944:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1137              		.loc 1 944 3 view .LVU313
 1138              		.loc 1 944 6 is_stmt 0 view .LVU314
 1139 0000 21B1     		cbz	r1, .L65
 945:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 946:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the SC mode by setting the SCEN bit in the CR3 register */
 947:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_SCEN;
 1140              		.loc 1 947 5 is_stmt 1 view .LVU315
 1141              		.loc 1 947 17 is_stmt 0 view .LVU316
 1142 0002 838A     		ldrh	r3, [r0, #20]
 1143 0004 43F02003 		orr	r3, r3, #32
 1144 0008 8382     		strh	r3, [r0, #20]	@ movhi
 1145 000a 7047     		bx	lr
 1146              	.L65:
 948:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 949:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 950:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 951:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
 952:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_SCEN);
 1147              		.loc 1 952 5 is_stmt 1 view .LVU317
 1148              		.loc 1 952 17 is_stmt 0 view .LVU318
 1149 000c 838A     		ldrh	r3, [r0, #20]
 1150 000e 9BB2     		uxth	r3, r3
 1151 0010 23F02003 		bic	r3, r3, #32
 1152 0014 9BB2     		uxth	r3, r3
 1153 0016 8382     		strh	r3, [r0, #20]	@ movhi
 953:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 38


 954:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1154              		.loc 1 954 1 view .LVU319
 1155 0018 7047     		bx	lr
 1156              		.cfi_endproc
 1157              	.LFE142:
 1159              		.section	.text.USART_SmartCardNACKCmd,"ax",%progbits
 1160              		.align	1
 1161              		.global	USART_SmartCardNACKCmd
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1165              		.fpu fpv4-sp-d16
 1167              	USART_SmartCardNACKCmd:
 1168              	.LVL100:
 1169              	.LFB143:
 955:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 956:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 957:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables NACK transmission.
 958:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 959:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 960:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the NACK transmission.
 961:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.  
 962:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 963:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 964:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 965:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1170              		.loc 1 965 1 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 966:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 967:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx)); 
 1175              		.loc 1 967 3 view .LVU321
 968:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1176              		.loc 1 968 3 view .LVU322
 969:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1177              		.loc 1 969 3 view .LVU323
 1178              		.loc 1 969 6 is_stmt 0 view .LVU324
 1179 0000 21B1     		cbz	r1, .L68
 970:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 971:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
 972:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_NACK;
 1180              		.loc 1 972 5 is_stmt 1 view .LVU325
 1181              		.loc 1 972 17 is_stmt 0 view .LVU326
 1182 0002 838A     		ldrh	r3, [r0, #20]
 1183 0004 43F01003 		orr	r3, r3, #16
 1184 0008 8382     		strh	r3, [r0, #20]	@ movhi
 1185 000a 7047     		bx	lr
 1186              	.L68:
 973:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 974:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 975:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 976:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
 977:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_NACK);
 1187              		.loc 1 977 5 is_stmt 1 view .LVU327
 1188              		.loc 1 977 17 is_stmt 0 view .LVU328
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 39


 1189 000c 838A     		ldrh	r3, [r0, #20]
 1190 000e 9BB2     		uxth	r3, r3
 1191 0010 23F01003 		bic	r3, r3, #16
 1192 0014 9BB2     		uxth	r3, r3
 1193 0016 8382     		strh	r3, [r0, #20]	@ movhi
 978:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 979:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1194              		.loc 1 979 1 view .LVU329
 1195 0018 7047     		bx	lr
 1196              		.cfi_endproc
 1197              	.LFE143:
 1199              		.section	.text.USART_IrDAConfig,"ax",%progbits
 1200              		.align	1
 1201              		.global	USART_IrDAConfig
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
 1205              		.fpu fpv4-sp-d16
 1207              	USART_IrDAConfig:
 1208              	.LVL101:
 1209              	.LFB144:
 980:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 981:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 982:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 983:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 984:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 985:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group7 IrDA mode functions
 986:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   IrDA mode functions 
 987:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 988:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 989:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 990:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                         ##### IrDA mode functions #####
 991:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 992:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 993:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to manage the USART 
 994:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     IrDA communication.
 995:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
 996:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     IrDA is a half duplex communication protocol. If the Transmitter is busy, any data
 997:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     on the IrDA receive line will be ignored by the IrDA decoder and if the Receiver 
 998:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     is busy, data on the TX from the USART to IrDA will not be encoded by IrDA.
 999:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     While receiving data, transmission should be avoided as the data to be transmitted
1000:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     could be corrupted.
1001:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1002:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     IrDA communication is possible through the following procedure:
1003:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Program the Baud rate, Word length = 8 bits, Stop bits, Parity, Transmitter/Receiver 
1004:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           modes and hardware flow control values using the USART_Init() function.
1005:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the USART using the USART_Cmd() function.
1006:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the IrDA pulse width by configuring the prescaler using  
1007:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           the USART_SetPrescaler() function.
1008:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Configures the IrDA  USART_IrDAMode_LowPower or USART_IrDAMode_Normal mode
1009:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           using the USART_IrDAConfig() function.
1010:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Enable the IrDA using the USART_IrDACmd() function.
1011:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1012:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- A pulse of width less than two and greater than one PSC period(s) may or may
1013:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           not be rejected.
1014:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- The receiver set up time should be managed by software. The IrDA physical layer
1015:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           specification specifies a minimum of 10 ms delay between transmission and 
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 40


1016:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           reception (IrDA is a half duplex protocol).
1017:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@- In IrDA mode, the following bits must be kept cleared:
1018:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (+@) LINEN, STOP and CLKEN bits in the USART_CR2 register.
1019:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (+@) SCEN and HDSEL bits in the USART_CR3 register.
1020:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1021:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1022:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1023:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1024:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1025:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1026:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Configures the USART's IrDA interface.
1027:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1028:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1029:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IrDAMode: specifies the IrDA mode.
1030:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1031:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_LowPower
1032:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_Normal
1033:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1034:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1035:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
1036:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1210              		.loc 1 1036 1 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
1037:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1038:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1215              		.loc 1 1038 3 view .LVU331
1039:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
 1216              		.loc 1 1039 3 view .LVU332
1040:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1041:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IRLP);
 1217              		.loc 1 1041 3 view .LVU333
 1218              		.loc 1 1041 15 is_stmt 0 view .LVU334
 1219 0000 838A     		ldrh	r3, [r0, #20]
 1220 0002 9BB2     		uxth	r3, r3
 1221 0004 23F00403 		bic	r3, r3, #4
 1222 0008 9BB2     		uxth	r3, r3
 1223 000a 8382     		strh	r3, [r0, #20]	@ movhi
1042:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 |= USART_IrDAMode;
 1224              		.loc 1 1042 3 is_stmt 1 view .LVU335
 1225              		.loc 1 1042 15 is_stmt 0 view .LVU336
 1226 000c 838A     		ldrh	r3, [r0, #20]
 1227 000e 1943     		orrs	r1, r1, r3
 1228              	.LVL102:
 1229              		.loc 1 1042 15 view .LVU337
 1230 0010 8182     		strh	r1, [r0, #20]	@ movhi
1043:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1231              		.loc 1 1043 1 view .LVU338
 1232 0012 7047     		bx	lr
 1233              		.cfi_endproc
 1234              	.LFE144:
 1236              		.section	.text.USART_IrDACmd,"ax",%progbits
 1237              		.align	1
 1238              		.global	USART_IrDACmd
 1239              		.syntax unified
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 41


 1240              		.thumb
 1241              		.thumb_func
 1242              		.fpu fpv4-sp-d16
 1244              	USART_IrDACmd:
 1245              	.LVL103:
 1246              	.LFB145:
1044:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1045:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1046:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's IrDA interface.
1047:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1048:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1049:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the IrDA mode.
1050:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1051:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1052:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1053:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
1054:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1247              		.loc 1 1054 1 is_stmt 1 view -0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 1251              		@ link register save eliminated.
1055:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1056:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1252              		.loc 1 1056 3 view .LVU340
1057:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1253              		.loc 1 1057 3 view .LVU341
1058:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1059:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1254              		.loc 1 1059 3 view .LVU342
 1255              		.loc 1 1059 6 is_stmt 0 view .LVU343
 1256 0000 21B1     		cbz	r1, .L72
1060:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1061:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
1062:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_IREN;
 1257              		.loc 1 1062 5 is_stmt 1 view .LVU344
 1258              		.loc 1 1062 17 is_stmt 0 view .LVU345
 1259 0002 838A     		ldrh	r3, [r0, #20]
 1260 0004 43F00203 		orr	r3, r3, #2
 1261 0008 8382     		strh	r3, [r0, #20]	@ movhi
 1262 000a 7047     		bx	lr
 1263              	.L72:
1063:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1064:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1065:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1066:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
1067:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IREN);
 1264              		.loc 1 1067 5 is_stmt 1 view .LVU346
 1265              		.loc 1 1067 17 is_stmt 0 view .LVU347
 1266 000c 838A     		ldrh	r3, [r0, #20]
 1267 000e 9BB2     		uxth	r3, r3
 1268 0010 23F00203 		bic	r3, r3, #2
 1269 0014 9BB2     		uxth	r3, r3
 1270 0016 8382     		strh	r3, [r0, #20]	@ movhi
1068:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1069:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1271              		.loc 1 1069 1 view .LVU348
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 42


 1272 0018 7047     		bx	lr
 1273              		.cfi_endproc
 1274              	.LFE145:
 1276              		.section	.text.USART_DMACmd,"ax",%progbits
 1277              		.align	1
 1278              		.global	USART_DMACmd
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1282              		.fpu fpv4-sp-d16
 1284              	USART_DMACmd:
 1285              	.LVL104:
 1286              	.LFB146:
1070:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1071:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1072:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
1073:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1074:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1075:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group8 DMA transfers management functions
1076:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   DMA transfers management functions
1077:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
1078:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
1079:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
1080:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****               ##### DMA transfers management functions #####
1081:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
1082:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1083:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1084:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1085:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1086:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1087:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1088:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's DMA interface.
1089:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1090:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1091:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_DMAReq: specifies the DMA request.
1092:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1093:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Tx: USART DMA transmit request
1094:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Rx: USART DMA receive request
1095:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the DMA Request sources.
1096:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.   
1097:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1098:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1099:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
1100:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1287              		.loc 1 1100 1 is_stmt 1 view -0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
1101:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1102:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1292              		.loc 1 1102 3 view .LVU350
1103:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_DMAREQ(USART_DMAReq));  
 1293              		.loc 1 1103 3 view .LVU351
1104:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 1294              		.loc 1 1104 3 view .LVU352
1105:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 43


1106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1295              		.loc 1 1106 3 view .LVU353
 1296              		.loc 1 1106 6 is_stmt 0 view .LVU354
 1297 0000 1AB1     		cbz	r2, .L75
1107:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1108:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the DMA transfer for selected requests by setting the DMAT and/or
1109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1110:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_DMAReq;
 1298              		.loc 1 1110 5 is_stmt 1 view .LVU355
 1299              		.loc 1 1110 17 is_stmt 0 view .LVU356
 1300 0002 838A     		ldrh	r3, [r0, #20]
 1301 0004 1943     		orrs	r1, r1, r3
 1302              	.LVL105:
 1303              		.loc 1 1110 17 view .LVU357
 1304 0006 8182     		strh	r1, [r0, #20]	@ movhi
 1305 0008 7047     		bx	lr
 1306              	.LVL106:
 1307              	.L75:
1111:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1112:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1113:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1114:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
1115:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1116:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~USART_DMAReq;
 1308              		.loc 1 1116 5 is_stmt 1 view .LVU358
 1309              		.loc 1 1116 17 is_stmt 0 view .LVU359
 1310 000a 838A     		ldrh	r3, [r0, #20]
 1311 000c 23EA0101 		bic	r1, r3, r1
 1312              	.LVL107:
 1313              		.loc 1 1116 17 view .LVU360
 1314 0010 8182     		strh	r1, [r0, #20]	@ movhi
1117:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1118:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1315              		.loc 1 1118 1 view .LVU361
 1316 0012 7047     		bx	lr
 1317              		.cfi_endproc
 1318              	.LFE146:
 1320              		.section	.text.USART_ITConfig,"ax",%progbits
 1321              		.align	1
 1322              		.global	USART_ITConfig
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
 1326              		.fpu fpv4-sp-d16
 1328              	USART_ITConfig:
 1329              	.LVL108:
 1330              	.LFB147:
1119:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1120:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1121:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
1122:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1123:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1124:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group9 Interrupts and flags management functions
1125:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Interrupts and flags management functions 
1126:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
1127:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
1128:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 44


1129:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             ##### Interrupts and flags management functions #####
1130:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
1131:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1132:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     This subsection provides a set of functions allowing to configure the USART 
1133:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     Interrupts sources, DMA channels requests and check or clear the flags or 
1134:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     pending bits status.
1135:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     The user should identify which mode will be used in his application to manage 
1136:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     the communication: Polling mode, Interrupt mode or DMA mode. 
1137:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1138:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *** Polling Mode ***
1139:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     ====================
1140:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1141:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In Polling Mode, the SPI communication can be managed by 10 flags:
1142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_TXE : to indicate the status of the transmit buffer register
1143:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_RXNE : to indicate the status of the receive buffer register
1144:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_TC : to indicate the status of the transmit operation
1145:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_IDLE : to indicate the status of the Idle Line             
1146:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_CTS : to indicate the status of the nCTS input
1147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_LBD : to indicate the status of the LIN break detection
1148:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_NE : to indicate if a noise error occur
1149:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_FE : to indicate if a frame error occur
1150:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_PE : to indicate if a parity error occur
1151:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_FLAG_ORE : to indicate if an Overrun error occur
1152:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1153:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In this Mode it is advised to use the following functions:
1154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG);
1155:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG);
1156:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1157:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *** Interrupt Mode ***
1158:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     ======================
1159:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1160:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In Interrupt Mode, the USART communication can be managed by 8 interrupt sources
1161:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     and 10 pending bits: 
1162:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Pending Bits:
1164:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1165:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_TXE : to indicate the status of the transmit buffer register
1166:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_RXNE : to indicate the status of the receive buffer register
1167:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_TC : to indicate the status of the transmit operation
1168:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_IDLE : to indicate the status of the Idle Line             
1169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_CTS : to indicate the status of the nCTS input
1170:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_LBD : to indicate the status of the LIN break detection
1171:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_NE : to indicate if a noise error occur
1172:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_FE : to indicate if a frame error occur
1173:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_PE : to indicate if a parity error occur
1174:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_ORE : to indicate if an Overrun error occur
1175:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1176:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) Interrupt Source:
1177:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1178:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_TXE : specifies the interrupt source for the Tx buffer empty 
1179:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                             interrupt. 
1180:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                              empty interrupt.
1182:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_TC : specifies the interrupt source for the Transmit complete 
1183:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                            interrupt. 
1184:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_IDLE : specifies the interrupt source for the Idle Line interrupt.           
1185:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_CTS : specifies the interrupt source for the CTS interrupt. 
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 45


1186:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_LBD : specifies the interrupt source for the LIN break detection
1187:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                             interrupt. 
1188:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_PE : specifies the interrupt source for the parity error interrupt. 
1189:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         (##) USART_IT_ERR :  specifies the interrupt source for the errors interrupt.
1190:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1191:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       -@@- Some parameters are coded in order to use them as interrupt source 
1192:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           or as pending bits.
1193:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In this Mode it is advised to use the following functions:
1195:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState);
1196:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT);
1197:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT);
1198:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *** DMA Mode ***
1200:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     ================
1201:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1202:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In DMA Mode, the USART communication can be managed by 2 DMA Channel requests:
1203:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (#) USART_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     [..]
1206:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     In this Mode it is advised to use the following function:
1207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       (+) void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
1208:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1212:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1213:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART interrupts.
1215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1216:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1217:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt sources to be enabled or disabled.
1218:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt
1220:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1221:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1222:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1223:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1226:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ERR:  Error interrupt(Frame error, noise error, overrun error)
1227:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the specified USARTx interrupts.
1228:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1229:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1230:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
1232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1331              		.loc 1 1232 1 is_stmt 1 view -0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336              		.loc 1 1232 1 is_stmt 0 view .LVU363
 1337 0000 10B4     		push	{r4}
 1338              	.LCFI7:
 1339              		.cfi_def_cfa_offset 4
 1340              		.cfi_offset 4, -4
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 46


1233:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
 1341              		.loc 1 1233 3 is_stmt 1 view .LVU364
 1342              	.LVL109:
1234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t usartxbase = 0x00;
 1343              		.loc 1 1234 3 view .LVU365
1235:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1236:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1344              		.loc 1 1236 3 view .LVU366
1237:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CONFIG_IT(USART_IT));
 1345              		.loc 1 1237 3 view .LVU367
1238:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1346              		.loc 1 1238 3 view .LVU368
1239:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
1241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
 1347              		.loc 1 1241 3 view .LVU369
1242:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1243:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1348              		.loc 1 1243 5 view .LVU370
1244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1246:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartxbase = (uint32_t)USARTx;
 1349              		.loc 1 1246 3 view .LVU371
1247:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the USART register index */
1249:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1350              		.loc 1 1249 3 view .LVU372
 1351              		.loc 1 1249 35 is_stmt 0 view .LVU373
 1352 0002 C1F34214 		ubfx	r4, r1, #5, #3
 1353              	.LVL110:
1250:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1251:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1252:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itpos = USART_IT & IT_MASK;
 1354              		.loc 1 1252 3 is_stmt 1 view .LVU374
 1355              		.loc 1 1252 9 is_stmt 0 view .LVU375
 1356 0006 01F01F01 		and	r1, r1, #31
 1357              	.LVL111:
1253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 1358              		.loc 1 1253 3 is_stmt 1 view .LVU376
 1359              		.loc 1 1253 10 is_stmt 0 view .LVU377
 1360 000a 0123     		movs	r3, #1
 1361 000c 03FA01F1 		lsl	r1, r3, r1
 1362              	.LVL112:
1254:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT is in CR1 register */
 1363              		.loc 1 1255 3 is_stmt 1 view .LVU378
 1364              		.loc 1 1255 6 is_stmt 0 view .LVU379
 1365 0010 9C42     		cmp	r4, r3
 1366 0012 09D0     		beq	.L84
1256:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x0C;
1258:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT is in CR2 register */
 1367              		.loc 1 1259 8 is_stmt 1 view .LVU380
 1368              		.loc 1 1259 11 is_stmt 0 view .LVU381
 1369 0014 022C     		cmp	r4, #2
 1370 0016 09D0     		beq	.L85
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 47


1260:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x10;
1262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1263:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* The IT is in CR3 register */
1264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1265:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x14; 
 1371              		.loc 1 1265 5 is_stmt 1 view .LVU382
 1372              		.loc 1 1265 16 is_stmt 0 view .LVU383
 1373 0018 1430     		adds	r0, r0, #20
 1374              	.LVL113:
 1375              	.L79:
1266:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1267:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1376              		.loc 1 1267 3 is_stmt 1 view .LVU384
 1377              		.loc 1 1267 6 is_stmt 0 view .LVU385
 1378 001a 4AB1     		cbz	r2, .L81
1268:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase  |= itmask;
 1379              		.loc 1 1269 5 is_stmt 1 view .LVU386
 1380              		.loc 1 1269 34 is_stmt 0 view .LVU387
 1381 001c 0368     		ldr	r3, [r0]
 1382 001e 1943     		orrs	r1, r1, r3
 1383              	.LVL114:
 1384              		.loc 1 1269 34 view .LVU388
 1385 0020 0160     		str	r1, [r0]
 1386              	.L77:
1270:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1272:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase &= ~itmask;
1274:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1387              		.loc 1 1275 1 view .LVU389
 1388 0022 5DF8044B 		ldr	r4, [sp], #4
 1389              	.LCFI8:
 1390              		.cfi_remember_state
 1391              		.cfi_restore 4
 1392              		.cfi_def_cfa_offset 0
 1393              	.LVL115:
 1394              		.loc 1 1275 1 view .LVU390
 1395 0026 7047     		bx	lr
 1396              	.LVL116:
 1397              	.L84:
 1398              	.LCFI9:
 1399              		.cfi_restore_state
1257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1400              		.loc 1 1257 5 is_stmt 1 view .LVU391
1257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1401              		.loc 1 1257 16 is_stmt 0 view .LVU392
 1402 0028 0C30     		adds	r0, r0, #12
 1403              	.LVL117:
1257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1404              		.loc 1 1257 16 view .LVU393
 1405 002a F6E7     		b	.L79
 1406              	.LVL118:
 1407              	.L85:
1261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 48


 1408              		.loc 1 1261 5 is_stmt 1 view .LVU394
1261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1409              		.loc 1 1261 16 is_stmt 0 view .LVU395
 1410 002c 1030     		adds	r0, r0, #16
 1411              	.LVL119:
1261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1412              		.loc 1 1261 16 view .LVU396
 1413 002e F4E7     		b	.L79
 1414              	.LVL120:
 1415              	.L81:
1273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1416              		.loc 1 1273 5 is_stmt 1 view .LVU397
1273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1417              		.loc 1 1273 33 is_stmt 0 view .LVU398
 1418 0030 0368     		ldr	r3, [r0]
 1419 0032 23EA0101 		bic	r1, r3, r1
 1420              	.LVL121:
1273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1421              		.loc 1 1273 33 view .LVU399
 1422 0036 0160     		str	r1, [r0]
 1423              		.loc 1 1275 1 view .LVU400
 1424 0038 F3E7     		b	.L77
 1425              		.cfi_endproc
 1426              	.LFE147:
 1428              		.section	.text.USART_GetFlagStatus,"ax",%progbits
 1429              		.align	1
 1430              		.global	USART_GetFlagStatus
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1434              		.fpu fpv4-sp-d16
 1436              	USART_GetFlagStatus:
 1437              	.LVL122:
 1438              	.LFB148:
1276:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1278:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART flag is set or not.
1279:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1280:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1281:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to check.
1282:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1283:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5)
1284:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag
1285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TXE:  Transmit data register empty flag
1286:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag
1287:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag
1288:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_IDLE: Idle Line detection flag
1289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_ORE:  OverRun Error flag
1290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_NE:   Noise Error flag
1291:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_FE:   Framing Error flag
1292:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_PE:   Parity Error flag
1293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The new state of USART_FLAG (SET or RESET).
1294:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1296:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1439              		.loc 1 1296 1 is_stmt 1 view -0
 1440              		.cfi_startproc
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 49


 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              		@ link register save eliminated.
1297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   FlagStatus bitstatus = RESET;
 1444              		.loc 1 1297 3 view .LVU402
1298:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1445              		.loc 1 1299 3 view .LVU403
1300:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_FLAG(USART_FLAG));
 1446              		.loc 1 1300 3 view .LVU404
1301:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1302:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1303:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_FLAG == USART_FLAG_CTS)
 1447              		.loc 1 1303 3 view .LVU405
1304:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1305:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1448              		.loc 1 1305 5 view .LVU406
1306:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1307:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1308:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 1449              		.loc 1 1308 3 view .LVU407
 1450              		.loc 1 1308 14 is_stmt 0 view .LVU408
 1451 0000 0388     		ldrh	r3, [r0]
 1452              		.loc 1 1308 6 view .LVU409
 1453 0002 1942     		tst	r1, r3
 1454 0004 01D0     		beq	.L88
1309:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1310:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = SET;
 1455              		.loc 1 1310 15 view .LVU410
 1456 0006 0120     		movs	r0, #1
 1457              	.LVL123:
 1458              		.loc 1 1310 15 view .LVU411
 1459 0008 7047     		bx	lr
 1460              	.LVL124:
 1461              	.L88:
1311:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1312:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1313:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1314:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = RESET;
 1462              		.loc 1 1314 15 view .LVU412
 1463 000a 0020     		movs	r0, #0
 1464              	.LVL125:
1315:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1316:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return bitstatus;
 1465              		.loc 1 1316 3 is_stmt 1 view .LVU413
1317:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1466              		.loc 1 1317 1 is_stmt 0 view .LVU414
 1467 000c 7047     		bx	lr
 1468              		.cfi_endproc
 1469              	.LFE148:
 1471              		.section	.text.USART_ClearFlag,"ax",%progbits
 1472              		.align	1
 1473              		.global	USART_ClearFlag
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1477              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 50


 1479              	USART_ClearFlag:
 1480              	.LVL126:
 1481              	.LFB149:
1318:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1319:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1320:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's pending flags.
1321:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1322:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1323:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to clear.
1324:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1325:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5).
1326:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag.
1327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag.
1328:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag.
1329:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *   
1330:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1331:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) flags are cleared by software 
1332:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          sequence: a read operation to USART_SR register (USART_GetFlagStatus()) 
1333:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          followed by a read operation to USART_DR register (USART_ReceiveData()).
1334:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   RXNE flag can be also cleared by a read to the USART_DR register 
1335:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1336:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TC flag can be also cleared by software sequence: a read operation to 
1337:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          USART_SR register (USART_GetFlagStatus()) followed by a write operation
1338:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          to USART_DR register (USART_SendData()).
1339:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TXE flag is cleared only by a write to the USART_DR register 
1340:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1341:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *   
1342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1343:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1344:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1345:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1482              		.loc 1 1345 1 is_stmt 1 view -0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              		@ link register save eliminated.
1346:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1347:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1487              		.loc 1 1347 3 view .LVU416
1348:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
 1488              		.loc 1 1348 3 view .LVU417
1349:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1350:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1351:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USART_FLAG & USART_FLAG_CTS) == USART_FLAG_CTS)
 1489              		.loc 1 1351 3 view .LVU418
1352:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1353:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1490              		.loc 1 1353 5 view .LVU419
1354:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1355:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        
1356:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~USART_FLAG;
 1491              		.loc 1 1356 3 view .LVU420
 1492              		.loc 1 1356 16 is_stmt 0 view .LVU421
 1493 0000 C943     		mvns	r1, r1
 1494              	.LVL127:
 1495              		.loc 1 1356 16 view .LVU422
 1496 0002 89B2     		uxth	r1, r1
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 51


 1497              		.loc 1 1356 14 view .LVU423
 1498 0004 0180     		strh	r1, [r0]	@ movhi
1357:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1499              		.loc 1 1357 1 view .LVU424
 1500 0006 7047     		bx	lr
 1501              		.cfi_endproc
 1502              	.LFE149:
 1504              		.section	.text.USART_GetITStatus,"ax",%progbits
 1505              		.align	1
 1506              		.global	USART_GetITStatus
 1507              		.syntax unified
 1508              		.thumb
 1509              		.thumb_func
 1510              		.fpu fpv4-sp-d16
 1512              	USART_GetITStatus:
 1513              	.LVL128:
 1514              	.LFB150:
1358:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1359:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1360:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART interrupt has occurred or not.
1361:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1362:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1363:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt source to check.
1364:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1365:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1366:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1367:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1368:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1369:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1370:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1371:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_RX : OverRun Error interrupt if the RXNEIE bit is set
1372:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_ER : OverRun Error interrupt if the EIE bit is set  
1373:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_NE:   Noise Error interrupt
1374:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_FE:   Framing Error interrupt
1375:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1376:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The new state of USART_IT (SET or RESET).
1377:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1378:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
1379:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1515              		.loc 1 1379 1 is_stmt 1 view -0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              		@ link register save eliminated.
 1520              		.loc 1 1379 1 is_stmt 0 view .LVU426
 1521 0000 10B4     		push	{r4}
 1522              	.LCFI10:
 1523              		.cfi_def_cfa_offset 4
 1524              		.cfi_offset 4, -4
1380:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
 1525              		.loc 1 1380 3 is_stmt 1 view .LVU427
 1526              	.LVL129:
1381:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ITStatus bitstatus = RESET;
 1527              		.loc 1 1381 3 view .LVU428
1382:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1528              		.loc 1 1383 3 view .LVU429
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 52


1384:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_GET_IT(USART_IT)); 
 1529              		.loc 1 1384 3 view .LVU430
1385:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1386:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */ 
1387:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
 1530              		.loc 1 1387 3 view .LVU431
1388:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1389:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1531              		.loc 1 1389 5 view .LVU432
1390:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1391:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1392:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the USART register index */
1393:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1532              		.loc 1 1393 3 view .LVU433
 1533              		.loc 1 1393 35 is_stmt 0 view .LVU434
 1534 0002 C1F34212 		ubfx	r2, r1, #5, #3
 1535              	.LVL130:
1394:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1395:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = USART_IT & IT_MASK;
 1536              		.loc 1 1395 3 is_stmt 1 view .LVU435
 1537              		.loc 1 1395 10 is_stmt 0 view .LVU436
 1538 0006 01F01F04 		and	r4, r1, #31
 1539              	.LVL131:
1396:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 1540              		.loc 1 1396 3 is_stmt 1 view .LVU437
 1541              		.loc 1 1396 10 is_stmt 0 view .LVU438
 1542 000a 0123     		movs	r3, #1
 1543 000c A340     		lsls	r3, r3, r4
 1544              	.LVL132:
1397:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1398:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT  is in CR1 register */
 1545              		.loc 1 1398 3 is_stmt 1 view .LVU439
 1546              		.loc 1 1398 6 is_stmt 0 view .LVU440
 1547 000e 012A     		cmp	r2, #1
 1548 0010 0DD0     		beq	.L98
1399:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR1;
1401:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1402:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT  is in CR2 register */
 1549              		.loc 1 1402 8 is_stmt 1 view .LVU441
 1550              		.loc 1 1402 11 is_stmt 0 view .LVU442
 1551 0012 022A     		cmp	r2, #2
 1552 0014 0ED0     		beq	.L99
1403:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR2;
1405:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1406:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* The IT  is in CR3 register */
1407:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1408:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR3;
 1553              		.loc 1 1408 5 is_stmt 1 view .LVU443
 1554              		.loc 1 1408 21 is_stmt 0 view .LVU444
 1555 0016 828A     		ldrh	r2, [r0, #20]
 1556              	.LVL133:
 1557              		.loc 1 1408 12 view .LVU445
 1558 0018 1340     		ands	r3, r3, r2
 1559              	.LVL134:
 1560              	.L92:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 53


1409:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1410:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1411:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
 1561              		.loc 1 1411 3 is_stmt 1 view .LVU446
 1562              		.loc 1 1411 21 is_stmt 0 view .LVU447
 1563 001a 090A     		lsrs	r1, r1, #8
 1564              	.LVL135:
1412:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
 1565              		.loc 1 1412 3 is_stmt 1 view .LVU448
 1566              		.loc 1 1412 10 is_stmt 0 view .LVU449
 1567 001c 0122     		movs	r2, #1
 1568 001e 02FA01F1 		lsl	r1, r2, r1
 1569              	.LVL136:
1413:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos &= USARTx->SR;
 1570              		.loc 1 1413 3 is_stmt 1 view .LVU450
 1571              		.loc 1 1413 19 is_stmt 0 view .LVU451
 1572 0022 0288     		ldrh	r2, [r0]
 1573              		.loc 1 1413 10 view .LVU452
 1574 0024 1140     		ands	r1, r1, r2
 1575              	.LVL137:
1414:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 1576              		.loc 1 1414 3 is_stmt 1 view .LVU453
 1577              		.loc 1 1414 6 is_stmt 0 view .LVU454
 1578 0026 43B1     		cbz	r3, .L95
 1579              		.loc 1 1414 34 discriminator 1 view .LVU455
 1580 0028 59B9     		cbnz	r1, .L96
1415:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = SET;
1417:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1418:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1419:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1420:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = RESET;
 1581              		.loc 1 1420 15 view .LVU456
 1582 002a 0020     		movs	r0, #0
 1583              	.LVL138:
 1584              		.loc 1 1420 15 view .LVU457
 1585 002c 06E0     		b	.L94
 1586              	.LVL139:
 1587              	.L98:
1400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1588              		.loc 1 1400 5 is_stmt 1 view .LVU458
1400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1589              		.loc 1 1400 21 is_stmt 0 view .LVU459
 1590 002e 8289     		ldrh	r2, [r0, #12]
 1591              	.LVL140:
1400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1592              		.loc 1 1400 12 view .LVU460
 1593 0030 1340     		ands	r3, r3, r2
 1594              	.LVL141:
1400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1595              		.loc 1 1400 12 view .LVU461
 1596 0032 F2E7     		b	.L92
 1597              	.LVL142:
 1598              	.L99:
1404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1599              		.loc 1 1404 5 is_stmt 1 view .LVU462
1404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 54


 1600              		.loc 1 1404 21 is_stmt 0 view .LVU463
 1601 0034 028A     		ldrh	r2, [r0, #16]
 1602              	.LVL143:
1404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1603              		.loc 1 1404 12 view .LVU464
 1604 0036 1340     		ands	r3, r3, r2
 1605              	.LVL144:
1404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1606              		.loc 1 1404 12 view .LVU465
 1607 0038 EFE7     		b	.L92
 1608              	.LVL145:
 1609              	.L95:
 1610              		.loc 1 1420 15 view .LVU466
 1611 003a 0020     		movs	r0, #0
 1612              	.LVL146:
 1613              	.L94:
1421:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1422:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1423:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return bitstatus;  
 1614              		.loc 1 1423 3 is_stmt 1 view .LVU467
1424:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1615              		.loc 1 1424 1 is_stmt 0 view .LVU468
 1616 003c 5DF8044B 		ldr	r4, [sp], #4
 1617              	.LCFI11:
 1618              		.cfi_remember_state
 1619              		.cfi_restore 4
 1620              		.cfi_def_cfa_offset 0
 1621 0040 7047     		bx	lr
 1622              	.LVL147:
 1623              	.L96:
 1624              	.LCFI12:
 1625              		.cfi_restore_state
1416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1626              		.loc 1 1416 15 view .LVU469
 1627 0042 0120     		movs	r0, #1
 1628              	.LVL148:
1416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1629              		.loc 1 1416 15 view .LVU470
 1630 0044 FAE7     		b	.L94
 1631              		.cfi_endproc
 1632              	.LFE150:
 1634              		.section	.text.USART_ClearITPendingBit,"ax",%progbits
 1635              		.align	1
 1636              		.global	USART_ClearITPendingBit
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu fpv4-sp-d16
 1642              	USART_ClearITPendingBit:
 1643              	.LVL149:
 1644              	.LFB151:
1425:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1426:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1427:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's interrupt pending bits.
1428:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the USART or 
1429:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1430:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the interrupt pending bit to clear.
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 55


1431:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1432:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1433:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1434:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt. 
1435:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt.
1436:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
1437:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1438:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) pending bits are cleared by 
1439:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          software sequence: a read operation to USART_SR register 
1440:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_GetITStatus()) followed by a read operation to USART_DR register 
1441:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1442:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   RXNE pending bit can be also cleared by a read to the USART_DR register 
1443:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1444:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TC pending bit can be also cleared by software sequence: a read 
1445:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          operation to USART_SR register (USART_GetITStatus()) followed by a write 
1446:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          operation to USART_DR register (USART_SendData()).
1447:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TXE pending bit is cleared only by a write to the USART_DR register 
1448:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1449:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *  
1450:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1451:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1452:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
1453:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1645              		.loc 1 1453 1 is_stmt 1 view -0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              		@ link register save eliminated.
1454:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint16_t bitpos = 0x00, itmask = 0x00;
 1650              		.loc 1 1454 3 view .LVU472
1455:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1456:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1651              		.loc 1 1456 3 view .LVU473
1457:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_IT(USART_IT)); 
 1652              		.loc 1 1457 3 view .LVU474
1458:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1459:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
1460:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
 1653              		.loc 1 1460 3 view .LVU475
1461:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1462:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1654              		.loc 1 1462 5 view .LVU476
1463:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1464:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1465:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
 1655              		.loc 1 1465 3 view .LVU477
 1656              		.loc 1 1465 10 is_stmt 0 view .LVU478
 1657 0000 090A     		lsrs	r1, r1, #8
 1658              	.LVL150:
1466:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
 1659              		.loc 1 1466 3 is_stmt 1 view .LVU479
 1660              		.loc 1 1466 28 is_stmt 0 view .LVU480
 1661 0002 0123     		movs	r3, #1
 1662 0004 8B40     		lsls	r3, r3, r1
 1663              		.loc 1 1466 10 view .LVU481
 1664 0006 9BB2     		uxth	r3, r3
 1665              	.LVL151:
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 56


1467:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~itmask;
 1666              		.loc 1 1467 3 is_stmt 1 view .LVU482
 1667              		.loc 1 1467 16 is_stmt 0 view .LVU483
 1668 0008 DB43     		mvns	r3, r3
 1669              	.LVL152:
 1670              		.loc 1 1467 16 view .LVU484
 1671 000a 9BB2     		uxth	r3, r3
 1672              	.LVL153:
 1673              		.loc 1 1467 14 view .LVU485
 1674 000c 0380     		strh	r3, [r0]	@ movhi
1468:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1675              		.loc 1 1468 1 view .LVU486
 1676 000e 7047     		bx	lr
 1677              		.cfi_endproc
 1678              	.LFE151:
 1680              		.text
 1681              	.Letext0:
 1682              		.file 2 "/Users/gordon/Documents/soft_proj/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1683              		.file 3 "/Users/gordon/Documents/soft_proj/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1684              		.file 4 "Libraries/CMSIS/Include/core_cm4.h"
 1685              		.file 5 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1686              		.file 6 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1687              		.file 7 "Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 1688              		.file 8 "Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_usart.c
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:18     .text.USART_DeInit:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:26     .text.USART_DeInit:0000000000000000 USART_DeInit
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:209    .text.USART_DeInit:00000000000000dc $d
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:221    .text.USART_Init:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:228    .text.USART_Init:0000000000000000 USART_Init
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:468    .text.USART_Init:00000000000000c8 $d
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:474    .text.USART_StructInit:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:481    .text.USART_StructInit:0000000000000000 USART_StructInit
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:516    .text.USART_ClockInit:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:523    .text.USART_ClockInit:0000000000000000 USART_ClockInit
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:586    .text.USART_ClockStructInit:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:593    .text.USART_ClockStructInit:0000000000000000 USART_ClockStructInit
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:620    .text.USART_Cmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:627    .text.USART_Cmd:0000000000000000 USART_Cmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:660    .text.USART_SetPrescaler:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:667    .text.USART_SetPrescaler:0000000000000000 USART_SetPrescaler
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:694    .text.USART_OverSampling8Cmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:701    .text.USART_OverSampling8Cmd:0000000000000000 USART_OverSampling8Cmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:732    .text.USART_OneBitMethodCmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:739    .text.USART_OneBitMethodCmd:0000000000000000 USART_OneBitMethodCmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:772    .text.USART_SendData:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:779    .text.USART_SendData:0000000000000000 USART_SendData
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:801    .text.USART_ReceiveData:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:808    .text.USART_ReceiveData:0000000000000000 USART_ReceiveData
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:828    .text.USART_SetAddress:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:835    .text.USART_SetAddress:0000000000000000 USART_SetAddress
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:865    .text.USART_ReceiverWakeUpCmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:872    .text.USART_ReceiverWakeUpCmd:0000000000000000 USART_ReceiverWakeUpCmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:905    .text.USART_WakeUpConfig:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:912    .text.USART_WakeUpConfig:0000000000000000 USART_WakeUpConfig
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:942    .text.USART_LINBreakDetectLengthConfig:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:949    .text.USART_LINBreakDetectLengthConfig:0000000000000000 USART_LINBreakDetectLengthConfig
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:979    .text.USART_LINCmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:986    .text.USART_LINCmd:0000000000000000 USART_LINCmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1019   .text.USART_SendBreak:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1026   .text.USART_SendBreak:0000000000000000 USART_SendBreak
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1046   .text.USART_HalfDuplexCmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1053   .text.USART_HalfDuplexCmd:0000000000000000 USART_HalfDuplexCmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1086   .text.USART_SetGuardTime:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1093   .text.USART_SetGuardTime:0000000000000000 USART_SetGuardTime
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1120   .text.USART_SmartCardCmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1127   .text.USART_SmartCardCmd:0000000000000000 USART_SmartCardCmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1160   .text.USART_SmartCardNACKCmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1167   .text.USART_SmartCardNACKCmd:0000000000000000 USART_SmartCardNACKCmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1200   .text.USART_IrDAConfig:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1207   .text.USART_IrDAConfig:0000000000000000 USART_IrDAConfig
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1237   .text.USART_IrDACmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1244   .text.USART_IrDACmd:0000000000000000 USART_IrDACmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1277   .text.USART_DMACmd:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1284   .text.USART_DMACmd:0000000000000000 USART_DMACmd
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1321   .text.USART_ITConfig:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1328   .text.USART_ITConfig:0000000000000000 USART_ITConfig
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1429   .text.USART_GetFlagStatus:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1436   .text.USART_GetFlagStatus:0000000000000000 USART_GetFlagStatus
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1472   .text.USART_ClearFlag:0000000000000000 $t
ARM GAS  /var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s 			page 58


/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1479   .text.USART_ClearFlag:0000000000000000 USART_ClearFlag
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1505   .text.USART_GetITStatus:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1512   .text.USART_GetITStatus:0000000000000000 USART_GetITStatus
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1635   .text.USART_ClearITPendingBit:0000000000000000 $t
/var/folders/3x/w4njr7bn61lgchzhylxd3k6w0000gn/T//ccbOCGJQ.s:1642   .text.USART_ClearITPendingBit:0000000000000000 USART_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
